From 18e32f9612a27544ed29a07cdd4f0394fbf69dac Mon Sep 17 00:00:00 2001
From: John <jstupak@fnal.gov>
Date: Thu, 26 Jun 2014 20:05:09 -0500
Subject: [PATCH 1/6] Cherry pick: 1

---
 .../PatCandidates/src/classes_def_objects.xml      |   4 +-
 .../JetProducers/python/jettoolboxHelper_cff.py    |  63 ++++++++
 .../python/jettoolboxMiniHelper_cff.py             | 174 +++++++++++++++++++++
 RecoJets/JetProducers/test/jettoolbox_cfg.py       | 123 +++++++++++++++
 4 files changed, 363 insertions(+), 1 deletion(-)
 create mode 100644 RecoJets/JetProducers/python/jettoolboxHelper_cff.py
 create mode 100644 RecoJets/JetProducers/python/jettoolboxMiniHelper_cff.py
 create mode 100644 RecoJets/JetProducers/test/jettoolbox_cfg.py

diff --git a/DataFormats/PatCandidates/src/classes_def_objects.xml b/DataFormats/PatCandidates/src/classes_def_objects.xml
index 801cba1..a97170e 100644
--- a/DataFormats/PatCandidates/src/classes_def_objects.xml
+++ b/DataFormats/PatCandidates/src/classes_def_objects.xml
@@ -16,9 +16,11 @@
   <class name="pat::Lepton<reco::BaseTau>" />
 
   <!-- PAT Objects, and embedded data  -->
-  <class name="pat::Electron"  ClassVersion="24">
+
+  <class name="pat::Electron"  ClassVersion="25">
    <field name="superClusterRelinked_" transient="true"/>
    <version ClassVersion="24" checksum="2646043873"/>
+   <version ClassVersion="25" checksum="1488101799"/>
    <version ClassVersion="23" checksum="434577157"/>
    <version ClassVersion="22" checksum="4113394532"/>
    <version ClassVersion="21" checksum="366535823"/>
diff --git a/RecoJets/JetProducers/python/jettoolboxHelper_cff.py b/RecoJets/JetProducers/python/jettoolboxHelper_cff.py
new file mode 100644
index 0000000..a0bc153
--- /dev/null
+++ b/RecoJets/JetProducers/python/jettoolboxHelper_cff.py
@@ -0,0 +1,63 @@
+## import skeleton process
+from PhysicsTools.PatAlgos.patTemplate_cfg import *
+## switch to uncheduled mode
+process.options.allowUnscheduled = cms.untracked.bool(True)
+
+process.load('PhysicsTools.PatAlgos.producersLayer1.patCandidates_cff')
+process.load('PhysicsTools.PatAlgos.selectionLayer1.selectedPatCandidates_cff')
+process.load("RecoJets.Configuration.RecoGenJets_cff")
+process.load("RecoJets.Configuration.GenJetParticles_cff")
+
+process.load('RecoJets.Configuration.RecoPFJets_cff')
+
+from PhysicsTools.PatAlgos.tools.jetTools import addJetCollection
+from PhysicsTools.PatAlgos.tools.jetTools import switchJetCollection
+
+addJetCollection(
+    process,
+    labelName = 'AK4PFCHS',
+    jetSource = cms.InputTag('ak4PFJetsCHS'),
+    algo = 'ak4',
+    rParam = 0.4,
+    jetCorrections = ('AK5PFchs', cms.vstring(['L1FastJet', 'L2Relative', 'L3Absolute']), 'None')
+    )
+
+addJetCollection(
+    process,
+    labelName = 'CA8PFCHS',
+    jetSource = cms.InputTag('ca8PFJetsCHS'),
+    algo = 'ca8',
+    rParam = 0.8,
+    jetCorrections = ('AK7PFchs', cms.vstring(['L1FastJet', 'L2Relative', 'L3Absolute']), 'None')
+    )
+
+addJetCollection(
+    process,
+    labelName = 'AK8PFCHS',
+    jetSource = cms.InputTag('ak8PFJetsCHS'),
+    algo = 'ak8',
+    rParam = 0.8,
+    jetCorrections = ('AK7PFchs', cms.vstring(['L1FastJet', 'L2Relative', 'L3Absolute']), 'None')
+    )
+
+switchJetCollection(
+    process,
+    jetSource = cms.InputTag('ak4PFJets'),
+    rParam = 0.4,
+    jetCorrections = ('AK5PF', cms.vstring(['L1FastJet', 'L2Relative', 'L3Absolute']), 'Type-1'),
+    btagDiscriminators = ['jetBProbabilityBJetTags',
+                          'jetProbabilityBJetTags',
+                          'trackCountingHighPurBJetTags',
+                          'trackCountingHighEffBJetTags',
+                          'simpleSecondaryVertexHighEffBJetTags',
+                          'simpleSecondaryVertexHighPurBJetTags',
+                          'combinedSecondaryVertexBJetTags'
+                          ],
+    )
+
+process.out.outputCommands += ['keep *_ak4PFJetsCHS_*_*',
+                               'keep *_patJetsAK4PFCHS_*_*',
+                               'keep *_ca8PFJetsCHS_*_*',
+                               'keep *_patJetsCA8PFCHS_*_*',
+                               'keep *_ak8PFJetsCHS_*_*',
+                               'keep *_patJetsAK8PFCHS_*_*']
diff --git a/RecoJets/JetProducers/python/jettoolboxMiniHelper_cff.py b/RecoJets/JetProducers/python/jettoolboxMiniHelper_cff.py
new file mode 100644
index 0000000..b979000
--- /dev/null
+++ b/RecoJets/JetProducers/python/jettoolboxMiniHelper_cff.py
@@ -0,0 +1,174 @@
+import FWCore.ParameterSet.Config as cms
+
+process = cms.Process('mini')
+process.maxEvents = cms.untracked.PSet( input = cms.untracked.int32(-1) )
+
+process.load('PhysicsTools.PatAlgos.producersLayer1.patCandidates_cff')
+process.load('Configuration.EventContent.EventContent_cff')
+process.load('Configuration.StandardSequences.Geometry_cff')
+process.load('Configuration.StandardSequences.MagneticField_38T_cff')
+process.load('Configuration.StandardSequences.FrontierConditions_GlobalTag_cff')
+process.GlobalTag.globaltag = 'START70_V6::All'
+
+process.chs = cms.EDFilter('CandPtrSelector', src = cms.InputTag('packedPFCandidates'), cut = cms.string('fromPV'))
+"""
+process.load('RecoJets.Configuration.RecoPFJets_cff')
+process.load('RecoJets.Configuration.RecoGenJets_cff')
+
+process.ak4PFJets.src = 'packedPFCandidates'
+process.ak4PFJets.doAreaFastjet = True
+
+process.ak4PFJetsCHS = process.ak4PFJetsCHS.clone(src = 'chs', doAreaFastjet = True)
+process.ak8PFJetsCHS = process.ak4PFJetsCHS.clone(src = 'chs', doAreaFastjet = True, rParam = 0.8)
+process.ca8PFJetsCHS = process.ca4PFJets.clone(src = 'chs', doAreaFastjet = True, rParam = 0.8)
+
+process.ak4GenJets.src = 'packedGenParticles'
+process.ak8GenJets = process.ak4GenJets.clone(src = 'packedGenParticles', rParam = 0.8)
+process.ca8GenJets = process.ca4GenJets.clone(src = 'packedGenParticles', rParam = 0.8)
+"""
+
+#from RecoJets.JetProducers.ak4PFJets_cfi import ak4PFJets
+#from RecoJets.JetProducers.ca4PFJets_cfi import ca4PFJets
+#from RecoJets.JetProducers.ak4GenJets_cfi import ak4GenJets
+#from RecoJets.JetProducers.ca4GenJets_cfi import ca4GenJets
+
+from RecoJets.Configuration.RecoPFJets_cff import *
+from RecoJets.Configuration.RecoGenJets_cff import *
+
+process.ak4PFJets    = ak4PFJets.clone(src = 'packedPFCandidates', doAreaFastjet = True) # no idea while doArea is false by default, but it's True in RECO so we have to set it
+process.ak4PFJetsCHS = ak4PFJets.clone(src = 'chs', doAreaFastjet = True) # no idea while doArea is false by default, but it's True in RECO so we have to set it
+process.ak8PFJetsCHS = ak4PFJets.clone(src = 'chs',                doAreaFastjet = True, rParam=0.8)
+process.ca8PFJetsCHS = ca4PFJets.clone(src = 'chs',                doAreaFastjet = True, rParam=0.8)
+
+process.ak4GenJets = ak4GenJets.clone(src = 'packedGenParticles')
+process.ak8GenJets = ak4GenJets.clone(src = 'packedGenParticles', rParam=0.8)
+process.ca8GenJets = ca4GenJets.clone(src = 'packedGenParticles', rParam=0.8)
+
+from PhysicsTools.PatAlgos.tools.jetTools import addJetCollection
+from PhysicsTools.PatAlgos.tools.jetTools import switchJetCollection
+
+addJetCollection(
+    process,
+    labelName = 'AK4PFCHS',
+    jetSource = cms.InputTag('ak4PFJetsCHS'),
+    algo = 'ak4',
+    rParam = 0.4,
+    jetCorrections = ('AK5PFchs', cms.vstring(['L1FastJet', 'L2Relative', 'L3Absolute']), 'None'),
+    trackSource = cms.InputTag('unpackedTracksAndVertices'),
+    pvSource = cms.InputTag('unpackedTracksAndVertices'),
+    btagDiscriminators = ['combinedSecondaryVertexBJetTags'],
+    ) 
+
+addJetCollection(
+    process,
+    labelName = 'CA8PFCHS',
+    jetSource = cms.InputTag('ca8PFJetsCHS'),
+    algo = 'ca8',
+    rParam = 0.8,
+    jetCorrections = ('AK7PFchs', cms.vstring(['L1FastJet', 'L2Relative', 'L3Absolute']), 'None'),
+    trackSource = cms.InputTag('unpackedTracksAndVertices'),
+    pvSource = cms.InputTag('unpackedTracksAndVertices'),
+    )                                                                                                                                                                                  
+addJetCollection(
+    process,
+    labelName = 'AK8PFCHS',
+    jetSource = cms.InputTag('ak8PFJetsCHS'),
+    algo = 'ak8',
+    rParam = 0.8,
+    jetCorrections = ('AK7PFchs', cms.vstring(['L1FastJet', 'L2Relative', 'L3Absolute']), 'None'),
+    trackSource = cms.InputTag('unpackedTracksAndVertices'),
+    pvSource = cms.InputTag('unpackedTracksAndVertices'),
+    ) 
+"""
+switchJetCollection(
+    process,
+    jetSource = cms.InputTag('ak4PFJets'),
+    algo = 'ak4',
+    rParam = 0.4,
+    jetCorrections = ('AK5PF', cms.vstring(['L1FastJet', 'L2Relative', 'L3Absolute']), 'Type-1'),
+    # btagDiscriminators = ['jetBProbabilityBJetTags',
+    #                       'jetProbabilityBJetTags',
+    #                       'trackCountingHighPurBJetTags',
+    #                       'trackCountingHighEffBJetTags',
+    #                       'simpleSecondaryVertexHighEffBJetTags',
+    #                       'simpleSecondaryVertexHighPurBJetTags',
+    #                       'combinedSecondaryVertexBJetTags'
+    #                       ],
+    trackSource = cms.InputTag('unpackedTracksAndVertices'),
+    pvSource = cms.InputTag('unpackedTracksAndVertices'),
+    )
+"""
+
+process.patJetsAK4PFCHS.addJetCharge   = False
+process.patJetsAK4PFCHS.addBTagInfo    = True
+process.patJetsAK4PFCHS.getJetMCFlavour = False
+process.patJetsAK4PFCHS.addAssociatedTracks = False
+process.patJetPartonMatchAK4PFCHS.matched='prunedGenParticles'
+process.patJetCorrFactorsAK4PFCHS.primaryVertices = 'offlineSlimmedPrimaryVertices'
+
+process.patJetsCA8PFCHS.addJetCharge   = False
+process.patJetsCA8PFCHS.addBTagInfo    = False   #For some reason this has to be False
+process.patJetsCA8PFCHS.getJetMCFlavour = False
+process.patJetsCA8PFCHS.addAssociatedTracks = False
+process.patJetPartonMatchCA8PFCHS.matched='prunedGenParticles'
+process.patJetCorrFactorsCA8PFCHS.primaryVertices = 'offlineSlimmedPrimaryVertices'
+
+process.patJetsAK8PFCHS.addJetCharge   = False
+process.patJetsAK8PFCHS.addBTagInfo    = False    #For some reason this has to be False
+process.patJetsAK8PFCHS.getJetMCFlavour = False
+process.patJetsAK8PFCHS.addAssociatedTracks = False
+process.patJetPartonMatchAK8PFCHS.matched='prunedGenParticles'
+process.patJetCorrFactorsAK8PFCHS.primaryVertices = 'offlineSlimmedPrimaryVertices'
+
+process.patJets.addJetCharge   = False
+process.patJets.addBTagInfo    = True
+process.patJets.getJetMCFlavour = False
+process.patJets.addAssociatedTracks = False
+process.patJetPartonMatch.matched = 'prunedGenParticles'
+process.patJetCorrFactors.primaryVertices = 'offlineSlimmedPrimaryVertices'
+
+
+process.load('RecoBTag.Configuration.RecoBTag_cff')
+process.load('RecoJets.Configuration.RecoJetAssociations_cff')
+process.load('PhysicsTools.PatAlgos.slimming.unpackedTracksAndVertices_cfi')
+
+process.ak4JetTracksAssociatorAtVertexPF.jets = cms.InputTag('ak4PFJetsCHS')
+process.ak4JetTracksAssociatorAtVertexPF.tracks = cms.InputTag('unpackedTracksAndVertices')
+process.ak8JetTracksAssociatorAtVertexPF=process.ak4JetTracksAssociatorAtVertexPF.clone(jets = cms.InputTag('ak8PFJetsCHS'),
+                                                                                        coneSize = 0.8)
+process.ca8JetTracksAssociatorAtVertexPF=process.ak4JetTracksAssociatorAtVertexPF.clone(jets = cms.InputTag('ca8PFJetsCHS'),
+                                                                                        coneSize = 0.8)
+
+process.impactParameterTagInfos.primaryVertex = cms.InputTag('unpackedTracksAndVertices')
+process.inclusiveSecondaryVertexFinderTagInfos.extSVCollection = cms.InputTag('unpackedTracksAndVertices','secondary','')
+process.combinedSecondaryVertex.trackMultiplicityMin = 1 #silly sv, uses un filtered tracks.. i.e. any pt
+
+process.load('FWCore.MessageLogger.MessageLogger_cfi')
+process.MessageLogger.cerr.FwkReport.reportEvery = 10
+process.MessageLogger.suppressWarning = cms.untracked.vstring('ecalLaserCorrFilter','manystripclus53X','toomanystripclus53X')
+process.options = cms.untracked.PSet( wantSummary = cms.untracked.bool(True) )
+process.options.allowUnscheduled = cms.untracked.bool(True)
+
+process.out = cms.OutputModule('PoolOutputModule',
+    fileName = cms.untracked.string('jettoolbox.root'),
+    outputCommands = cms.untracked.vstring([#'keep *_ak4PFJets_*_*',
+                                            #'keep *_patJets_*_*',
+                                            'keep *_ak4PFJetsCHS_*_*',
+                                            'keep *_patJetsAK4PFCHS_*_*',
+                                            'keep *_ca8PFJetsCHS_*_*',
+                                            'keep *_patJetsCA8PFCHS_*_*',
+                                            'keep *_ak8PFJetsCHS_*_*',
+                                            'keep *_patJetsAK8PFCHS_*_*',
+                                            ])
+)
+process.endpath = cms.EndPath(process.out)
+
+
+
+
+
+
+#TMP
+process.source = cms.Source("PoolSource",
+                            fileNames = cms.untracked.vstring("file:/uscms/home/jstupak/miniAOD2/CMSSW_7_0_6/src/miniAOD-prod_PAT.root")
+                            )
diff --git a/RecoJets/JetProducers/test/jettoolbox_cfg.py b/RecoJets/JetProducers/test/jettoolbox_cfg.py
new file mode 100644
index 0000000..80ba22e
--- /dev/null
+++ b/RecoJets/JetProducers/test/jettoolbox_cfg.py
@@ -0,0 +1,123 @@
+miniAOD=True
+
+if miniAOD:
+    from RecoJets.JetProducers.jettoolboxMiniHelper_cff import *
+else:
+    from RecoJets.JetProducers.jettoolboxHelper_cff import *
+
+####################################################################################################
+#pileupJetID
+"""
+process.load('RecoJets.JetProducers.pileupjetidproducer_cfi')
+
+process.pileupJetIdCalculator.jets = cms.InputTag("ak4PFJetsCHS")
+process.pileupJetIdEvaluator.jets = cms.InputTag("ak4PFJetsCHS")
+process.pileupJetIdCalculator.rho = cms.InputTag("fixedGridRhoFastjetAll")
+process.pileupJetIdEvaluator.rho = cms.InputTag("fixedGridRhoFastjetAll")
+
+process.patJetsAK4PFCHS.userData.userFloats.src += ['pileupJetIdEvaluator:fullDiscriminant']
+process.patJetsAK4PFCHS.userData.userInts.src += ['pileupJetIdEvaluator:cutbasedId','pileupJetIdEvaluator:fullId']
+process.out.outputCommands += ['keep *_pileupJetIdEvaluator_*_*']
+
+#- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
+#QGTagger
+
+process.load('RecoJets.JetProducers.QGTagger_cfi')
+
+process.QGTagger.srcJets = cms.InputTag("ak4PFJetsCHS")
+process.QGTagger.jetsLabel = cms.string('QGL_AK5PFchs')
+
+process.patJetsAK4PFCHS.userData.userFloats.src += ['QGTagger:qgLikelihood']
+process.out.outputCommands += ['keep *_QGTagger_*_*']
+"""
+#- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
+#Njettiness
+
+process.load('RecoJets.JetProducers.nJettinessAdder_cfi')
+
+process.NjettinessCA8 = process.Njettiness.clone()
+process.NjettinessCA8.src = cms.InputTag("ca8PFJetsCHS")
+process.NjettinessCA8.cone = cms.double(0.8)
+
+process.patJetsCA8PFCHS.userData.userFloats.src += ['NjettinessCA8:tau1','NjettinessCA8:tau2','NjettinessCA8:tau3']
+process.out.outputCommands += ['keep *_NjettinessCA8_*_*']
+
+process.NjettinessAK8 = process.NjettinessCA8.clone()
+process.NjettinessAK8.src = cms.InputTag("ak8PFJetsCHS")
+
+process.patJetsAK8PFCHS.userData.userFloats.src += ['NjettinessAK8:tau1','NjettinessAK8:tau2','NjettinessAK8:tau3']
+process.out.outputCommands += ['keep *_NjettinessAK8_*_*']
+
+#- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
+#QJetsAdder
+
+process.RandomNumberGeneratorService = cms.Service("RandomNumberGeneratorService",
+                                                   QJetsAdderCA8 = cms.PSet(initialSeed = cms.untracked.uint32(7)),
+                                                   QJetsAdderAK8 = cms.PSet(initialSeed = cms.untracked.uint32(31)))
+
+process.load('RecoJets.JetProducers.qjetsadder_cfi')
+
+process.QJetsAdderCA8 = process.QJetsAdder.clone()
+process.QJetsAdderCA8.src = cms.InputTag("ca8PFJetsCHS")
+process.QJetsAdderCA8.jetRad = cms.double(0.8)
+process.QJetsAdderCA8.jetAlgo = cms.string('CA')
+
+process.patJetsCA8PFCHS.userData.userFloats.src += ['QJetsAdderCA8:QjetsVolatility']
+process.out.outputCommands += ['keep *_QJetsAdderCA8_*_*']
+
+process.QJetsAdderAK8 = process.QJetsAdderCA8.clone()
+process.QJetsAdderAK8.src = cms.InputTag("ak8PFJetsCHS")
+process.QJetsAdderAK8.jetAlgo = cms.string('AK')
+
+process.patJetsAK8PFCHS.userData.userFloats.src += ['QJetsAdderAK8:QjetsVolatility']
+process.out.outputCommands += ['keep *_QJetsAdderAK8_*_*']
+                                   
+#- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
+#Grooming valueMaps
+"""
+process.load('RecoJets.Configuration.RecoPFJets_cff')
+
+process.patJetsCA8PFCHS.userData.userFloats.src += ['ca8PFJetsCHSPrunedLinks','ca8PFJetsCHSTrimmedLinks','ca8PFJetsCHSFilteredLinks']
+process.out.outputCommands += ['keep *_ca8PFJetsCHSPrunedLinks_*_*',
+                               'keep *_ca8PFJetsCHSTrimmedLinks_*_*',
+                               'keep *_ca8PFJetsCHSFilteredLinks_*_*']
+
+process.patJetsAK8PFCHS.userData.userFloats.src += ['ak8PFJetsCHSPrunedLinks','ak8PFJetsCHSTrimmedLinks','ak8PFJetsCHSFilteredLinks']
+process.out.outputCommands += ['keep *_ak8PFJetsCHSPrunedLinks_*_*',
+                               'keep *_ak8PFJetsCHSTrimmedLinks_*_*',
+                               'keep *_ak8PFJetsCHSFilteredLinks_*_*']
+
+process.cmsTopTagPFJetsCHSLinksCA8 = process.ca8PFJetsCHSPrunedLinks.clone()
+process.cmsTopTagPFJetsCHSLinksCA8.src = cms.InputTag("ca8PFJetsCHS")
+process.cmsTopTagPFJetsCHSLinksCA8.matched = cms.InputTag("cmsTopTagPFJetsCHS")
+
+process.patJetsCA8PFCHS.userData.userFloats.src += ['cmsTopTagPFJetsCHSLinksCA8']
+process.out.outputCommands += ['keep *_cmsTopTagPFJetsCHSLinksCA8_*_*']
+
+process.cmsTopTagPFJetsCHSLinksAK8 = process.cmsTopTagPFJetsCHSLinksCA8.clone()
+process.cmsTopTagPFJetsCHSLinksAK8.src = cms.InputTag("ak8PFJetsCHS")
+process.cmsTopTagPFJetsCHSLinksAK8.matched = cms.InputTag("cmsTopTagPFJetsCHS")
+
+process.patJetsAK8PFCHS.userData.userFloats.src += ['cmsTopTagPFJetsCHSLinksAK8']
+process.out.outputCommands += ['keep *_cmsTopTagPFJetsCHSLinksAK8_*_*']
+"""
+####################################################################################################
+
+## ------------------------------------------------------
+#  In addition you usually want to change the following
+#  parameter:
+## ------------------------------------------------------
+#
+#   process.GlobalTag.globaltag =  ...    ##  (according to https://twiki.cern.ch/twiki/bin/view/CMS/SWGuideFrontierConditions)
+#                                         ##
+
+if miniAOD:
+    process.source = cms.Source("PoolSource",
+                                fileNames = cms.untracked.vstring("file:/uscms/home/jstupak/miniAOD2/CMSSW_7_0_6/src/miniAOD-prod_PAT.root")
+                                )
+else:
+    from PhysicsTools.PatAlgos.patInputFiles_cff import filesRelValProdTTbarAODSIM
+    process.source.fileNames = filesRelValProdTTbarAODSIM
+
+process.maxEvents.input = 5
+process.out.fileName = 'jettoolbox.root'
-- 
1.8.3.1


From 1be636e2df724e457e517d917497934b36b34825 Mon Sep 17 00:00:00 2001
From: John <jstupak@fnal.gov>
Date: Thu, 26 Jun 2014 20:38:29 -0500
Subject: [PATCH 2/6] Cherry pick: 2

---
 RecoJets/JetProducers/interface/NjettinessAdder.h | 35 +++++++++++++
 RecoJets/JetProducers/plugins/NjettinessAdder.cc  | 63 +++++++++++++++++++++++
 2 files changed, 98 insertions(+)
 create mode 100644 RecoJets/JetProducers/interface/NjettinessAdder.h
 create mode 100644 RecoJets/JetProducers/plugins/NjettinessAdder.cc

diff --git a/RecoJets/JetProducers/interface/NjettinessAdder.h b/RecoJets/JetProducers/interface/NjettinessAdder.h
new file mode 100644
index 0000000..ec9787b
--- /dev/null
+++ b/RecoJets/JetProducers/interface/NjettinessAdder.h
@@ -0,0 +1,35 @@
+#ifndef NjettinessAdder_h
+#define NjettinessAdder_h
+
+#include <memory>
+#include "FWCore/Framework/interface/Event.h"
+#include "FWCore/Framework/interface/EventSetup.h"
+#include "FWCore/Framework/interface/EDProducer.h"
+#include "FWCore/ParameterSet/interface/ParameterSet.h"
+#include "FWCore/Utilities/interface/InputTag.h"
+#include "DataFormats/PatCandidates/interface/Jet.h"
+
+class NjettinessAdder : public edm::EDProducer { 
+ public:
+  explicit NjettinessAdder(const edm::ParameterSet& iConfig) :
+    src_(iConfig.getParameter<edm::InputTag>("src")),
+    src_token_(consumes<edm::View<reco::Jet>>(src_)),
+    cone_(iConfig.getParameter<double>("cone"))
+      {
+	produces<edm::ValueMap<float> >("tau1");
+	produces<edm::ValueMap<float> >("tau2");
+	produces<edm::ValueMap<float> >("tau3");
+      }
+    
+    virtual ~NjettinessAdder() {}
+    
+    void produce(edm::Event & iEvent, const edm::EventSetup & iSetup) ;
+    float getTau(int num,edm::Ptr<reco::Jet> object) const;
+    
+ private:	
+    edm::InputTag src_ ;
+    edm::EDGetTokenT<edm::View<reco::Jet>> src_token_;
+    double cone_ ;
+};
+
+#endif
diff --git a/RecoJets/JetProducers/plugins/NjettinessAdder.cc b/RecoJets/JetProducers/plugins/NjettinessAdder.cc
new file mode 100644
index 0000000..1019ed0
--- /dev/null
+++ b/RecoJets/JetProducers/plugins/NjettinessAdder.cc
@@ -0,0 +1,63 @@
+#include "RecoJets/JetProducers/interface/NjettinessAdder.h"
+#include "fastjet/contrib/Njettiness.hh"
+
+#include "FWCore/Framework/interface/MakerMacros.h"
+
+void NjettinessAdder::produce(edm::Event & iEvent, const edm::EventSetup & iSetup) {
+  // read input collection
+  edm::Handle<edm::View<reco::Jet> > jets;
+  iEvent.getByToken(src_token_, jets);
+  
+  // prepare room for output
+  std::vector<float> tau1;         tau1.reserve(jets->size());
+  std::vector<float> tau2;         tau2.reserve(jets->size());
+  std::vector<float> tau3;         tau3.reserve(jets->size());
+
+  for ( typename edm::View<reco::Jet>::const_iterator jetIt = jets->begin() ; jetIt != jets->end() ; ++jetIt ) {
+    reco::Jet newCand(*jetIt);
+    edm::Ptr<reco::Jet> jetPtr = jets->ptrAt(jetIt - jets->begin());
+
+    float t1=getTau(1, jetPtr );
+    float t2=getTau(2, jetPtr );
+    float t3=getTau(3, jetPtr );
+
+    tau1.push_back(t1);
+    tau2.push_back(t2);
+    tau3.push_back(t3);
+  }
+
+  std::auto_ptr<edm::ValueMap<float> > outT1(new edm::ValueMap<float>());
+  std::auto_ptr<edm::ValueMap<float> > outT2(new edm::ValueMap<float>());
+  std::auto_ptr<edm::ValueMap<float> > outT3(new edm::ValueMap<float>());
+  edm::ValueMap<float>::Filler fillerT1(*outT1);
+  edm::ValueMap<float>::Filler fillerT2(*outT2);
+  edm::ValueMap<float>::Filler fillerT3(*outT3);
+  fillerT1.insert(jets, tau1.begin(), tau1.end());
+  fillerT2.insert(jets, tau2.begin(), tau2.end());
+  fillerT3.insert(jets, tau3.begin(), tau3.end());
+  fillerT1.fill();
+  fillerT2.fill();
+  fillerT3.fill();
+  
+  iEvent.put(outT1,"tau1");
+  iEvent.put(outT2,"tau2");
+  iEvent.put(outT3,"tau3");
+}
+
+float NjettinessAdder::getTau(int num, edm::Ptr<reco::Jet> object) const
+{
+  std::vector<const reco::Candidate*> all_particles=object->getJetConstituentsQuick();
+
+  std::vector<fastjet::PseudoJet> FJparticles;
+  for (unsigned particle = 0; particle < all_particles.size(); particle++){
+    const reco::Candidate *thisParticle = all_particles.at(particle);
+    FJparticles.push_back( fastjet::PseudoJet( thisParticle->px(), thisParticle->py(), thisParticle->pz(), thisParticle->energy() ) );	
+  }
+  fastjet::contrib::NsubParameters paraNsub = fastjet::contrib::NsubParameters(1.0, cone_); //assume R=0.7 jet clusering used
+  fastjet::contrib::Njettiness routine(fastjet::contrib::Njettiness::onepass_kt_axes, paraNsub);
+  return routine.getTau(num, FJparticles); 
+}
+
+
+
+DEFINE_FWK_MODULE(NjettinessAdder);
-- 
1.8.3.1


From 217db10e4b84c413578e0ed4c79f8bb1ce078fe4 Mon Sep 17 00:00:00 2001
From: John <jstupak@fnal.gov>
Date: Thu, 26 Jun 2014 21:35:24 -0500
Subject: [PATCH 3/6] added groomingValueMaps

---
 .../python/jettoolboxMiniHelper_cff.py             | 44 +++++++++-------------
 RecoJets/JetProducers/test/jettoolbox_cfg.py       |  4 +-
 2 files changed, 19 insertions(+), 29 deletions(-)

diff --git a/RecoJets/JetProducers/python/jettoolboxMiniHelper_cff.py b/RecoJets/JetProducers/python/jettoolboxMiniHelper_cff.py
index b979000..09ea654 100644
--- a/RecoJets/JetProducers/python/jettoolboxMiniHelper_cff.py
+++ b/RecoJets/JetProducers/python/jettoolboxMiniHelper_cff.py
@@ -11,7 +11,7 @@ process.load('Configuration.StandardSequences.FrontierConditions_GlobalTag_cff')
 process.GlobalTag.globaltag = 'START70_V6::All'
 
 process.chs = cms.EDFilter('CandPtrSelector', src = cms.InputTag('packedPFCandidates'), cut = cms.string('fromPV'))
-"""
+
 process.load('RecoJets.Configuration.RecoPFJets_cff')
 process.load('RecoJets.Configuration.RecoGenJets_cff')
 
@@ -25,24 +25,18 @@ process.ca8PFJetsCHS = process.ca4PFJets.clone(src = 'chs', doAreaFastjet = True
 process.ak4GenJets.src = 'packedGenParticles'
 process.ak8GenJets = process.ak4GenJets.clone(src = 'packedGenParticles', rParam = 0.8)
 process.ca8GenJets = process.ca4GenJets.clone(src = 'packedGenParticles', rParam = 0.8)
-"""
 
-#from RecoJets.JetProducers.ak4PFJets_cfi import ak4PFJets
-#from RecoJets.JetProducers.ca4PFJets_cfi import ca4PFJets
-#from RecoJets.JetProducers.ak4GenJets_cfi import ak4GenJets
-#from RecoJets.JetProducers.ca4GenJets_cfi import ca4GenJets
+process.fixedGridRhoFastjetAll.pfCandidatesTag = 'packedPFCandidates'
 
-from RecoJets.Configuration.RecoPFJets_cff import *
-from RecoJets.Configuration.RecoGenJets_cff import *
+process.ak8PFJetsCHSPruned.src = 'chs'
+process.ak8PFJetsCHSTrimmed.src = 'chs'
+process.ak8PFJetsCHSFiltered.src = 'chs'
 
-process.ak4PFJets    = ak4PFJets.clone(src = 'packedPFCandidates', doAreaFastjet = True) # no idea while doArea is false by default, but it's True in RECO so we have to set it
-process.ak4PFJetsCHS = ak4PFJets.clone(src = 'chs', doAreaFastjet = True) # no idea while doArea is false by default, but it's True in RECO so we have to set it
-process.ak8PFJetsCHS = ak4PFJets.clone(src = 'chs',                doAreaFastjet = True, rParam=0.8)
-process.ca8PFJetsCHS = ca4PFJets.clone(src = 'chs',                doAreaFastjet = True, rParam=0.8)
+process.ca8PFJetsCHSPruned.src = 'chs'
+process.ca8PFJetsCHSTrimmed.src = 'chs'
+process.ca8PFJetsCHSFiltered.src = 'chs'
 
-process.ak4GenJets = ak4GenJets.clone(src = 'packedGenParticles')
-process.ak8GenJets = ak4GenJets.clone(src = 'packedGenParticles', rParam=0.8)
-process.ca8GenJets = ca4GenJets.clone(src = 'packedGenParticles', rParam=0.8)
+process.cmsTopTagPFJetsCHS.src = 'chs'
 
 from PhysicsTools.PatAlgos.tools.jetTools import addJetCollection
 from PhysicsTools.PatAlgos.tools.jetTools import switchJetCollection
@@ -150,17 +144,15 @@ process.options = cms.untracked.PSet( wantSummary = cms.untracked.bool(True) )
 process.options.allowUnscheduled = cms.untracked.bool(True)
 
 process.out = cms.OutputModule('PoolOutputModule',
-    fileName = cms.untracked.string('jettoolbox.root'),
-    outputCommands = cms.untracked.vstring([#'keep *_ak4PFJets_*_*',
-                                            #'keep *_patJets_*_*',
-                                            'keep *_ak4PFJetsCHS_*_*',
-                                            'keep *_patJetsAK4PFCHS_*_*',
-                                            'keep *_ca8PFJetsCHS_*_*',
-                                            'keep *_patJetsCA8PFCHS_*_*',
-                                            'keep *_ak8PFJetsCHS_*_*',
-                                            'keep *_patJetsAK8PFCHS_*_*',
-                                            ])
-)
+                               fileName = cms.untracked.string('jettoolbox.root'),
+                               outputCommands = cms.untracked.vstring(['keep *_ak4PFJetsCHS_*_*',
+                                                                       'keep *_patJetsAK4PFCHS_*_*',
+                                                                       'keep *_ca8PFJetsCHS_*_*',
+                                                                       'keep *_patJetsCA8PFCHS_*_*',
+                                                                       'keep *_ak8PFJetsCHS_*_*',
+                                                                       'keep *_patJetsAK8PFCHS_*_*',
+                                                                       ])
+                               )
 process.endpath = cms.EndPath(process.out)
 
 
diff --git a/RecoJets/JetProducers/test/jettoolbox_cfg.py b/RecoJets/JetProducers/test/jettoolbox_cfg.py
index 80ba22e..9c03cff 100644
--- a/RecoJets/JetProducers/test/jettoolbox_cfg.py
+++ b/RecoJets/JetProducers/test/jettoolbox_cfg.py
@@ -74,8 +74,6 @@ process.out.outputCommands += ['keep *_QJetsAdderAK8_*_*']
                                    
 #- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
 #Grooming valueMaps
-"""
-process.load('RecoJets.Configuration.RecoPFJets_cff')
 
 process.patJetsCA8PFCHS.userData.userFloats.src += ['ca8PFJetsCHSPrunedLinks','ca8PFJetsCHSTrimmedLinks','ca8PFJetsCHSFilteredLinks']
 process.out.outputCommands += ['keep *_ca8PFJetsCHSPrunedLinks_*_*',
@@ -100,7 +98,7 @@ process.cmsTopTagPFJetsCHSLinksAK8.matched = cms.InputTag("cmsTopTagPFJetsCHS")
 
 process.patJetsAK8PFCHS.userData.userFloats.src += ['cmsTopTagPFJetsCHSLinksAK8']
 process.out.outputCommands += ['keep *_cmsTopTagPFJetsCHSLinksAK8_*_*']
-"""
+
 ####################################################################################################
 
 ## ------------------------------------------------------
-- 
1.8.3.1


From 075cdb5a4c02be0cdeabe200b84a913ca7a2a14a Mon Sep 17 00:00:00 2001
From: John <jstupak@fnal.gov>
Date: Fri, 27 Jun 2014 15:33:12 -0500
Subject: [PATCH 4/6] switched to xRootD accessible input

---
 RecoJets/JetProducers/test/jettoolbox_cfg.py | 14 ++++++++------
 1 file changed, 8 insertions(+), 6 deletions(-)

diff --git a/RecoJets/JetProducers/test/jettoolbox_cfg.py b/RecoJets/JetProducers/test/jettoolbox_cfg.py
index 9c03cff..7f8a1fc 100644
--- a/RecoJets/JetProducers/test/jettoolbox_cfg.py
+++ b/RecoJets/JetProducers/test/jettoolbox_cfg.py
@@ -1,6 +1,6 @@
-miniAOD=True
+miniAODInput=True
 
-if miniAOD:
+if miniAODInput:
     from RecoJets.JetProducers.jettoolboxMiniHelper_cff import *
 else:
     from RecoJets.JetProducers.jettoolboxHelper_cff import *
@@ -18,15 +18,17 @@ process.pileupJetIdEvaluator.rho = cms.InputTag("fixedGridRhoFastjetAll")
 process.patJetsAK4PFCHS.userData.userFloats.src += ['pileupJetIdEvaluator:fullDiscriminant']
 process.patJetsAK4PFCHS.userData.userInts.src += ['pileupJetIdEvaluator:cutbasedId','pileupJetIdEvaluator:fullId']
 process.out.outputCommands += ['keep *_pileupJetIdEvaluator_*_*']
-
+"""
 #- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
 #QGTagger
-
+"""
 process.load('RecoJets.JetProducers.QGTagger_cfi')
 
 process.QGTagger.srcJets = cms.InputTag("ak4PFJetsCHS")
 process.QGTagger.jetsLabel = cms.string('QGL_AK5PFchs')
 
+if miniAODInput: process.QGTagger.srcVertexCollection = 'unpackedTracksAndVertices'
+
 process.patJetsAK4PFCHS.userData.userFloats.src += ['QGTagger:qgLikelihood']
 process.out.outputCommands += ['keep *_QGTagger_*_*']
 """
@@ -109,9 +111,9 @@ process.out.outputCommands += ['keep *_cmsTopTagPFJetsCHSLinksAK8_*_*']
 #   process.GlobalTag.globaltag =  ...    ##  (according to https://twiki.cern.ch/twiki/bin/view/CMS/SWGuideFrontierConditions)
 #                                         ##
 
-if miniAOD:
+if miniAODInput:
     process.source = cms.Source("PoolSource",
-                                fileNames = cms.untracked.vstring("file:/uscms/home/jstupak/miniAOD2/CMSSW_7_0_6/src/miniAOD-prod_PAT.root")
+                                fileNames = cms.untracked.vstring('/store/user/jstupak/ZH_HToBB_ZToLL_M-125_13TeV_powheg-herwigpp/Spring14dr-PU_S14_POSTLS170_V6AN1-v1/140622_185946/0000/miniAOD-prod_PAT_1.root')
                                 )
 else:
     from PhysicsTools.PatAlgos.patInputFiles_cff import filesRelValProdTTbarAODSIM
-- 
1.8.3.1


From 4624e1be7a5b31aab45b84857c4a1e362516dbe5 Mon Sep 17 00:00:00 2001
From: John <jstupak@fnal.gov>
Date: Fri, 4 Jul 2014 15:49:00 -0500
Subject: [PATCH 5/6] rejiggered to make easier for users

---
 .../JetProducers/python/jettoolboxHelper_cff.py    |   7 +
 .../python/jettoolboxMiniHelper_cff.py             |  12 +-
 RecoJets/JetProducers/python/jettoolbox_cff.py     |  62 ++++++++
 RecoJets/JetProducers/test/jettoolbox_cfg.py       | 156 ++++++---------------
 4 files changed, 112 insertions(+), 125 deletions(-)
 create mode 100644 RecoJets/JetProducers/python/jettoolbox_cff.py

diff --git a/RecoJets/JetProducers/python/jettoolboxHelper_cff.py b/RecoJets/JetProducers/python/jettoolboxHelper_cff.py
index a0bc153..d126fa6 100644
--- a/RecoJets/JetProducers/python/jettoolboxHelper_cff.py
+++ b/RecoJets/JetProducers/python/jettoolboxHelper_cff.py
@@ -55,9 +55,16 @@ switchJetCollection(
                           ],
     )
 
+from PhysicsTools.PatAlgos.patInputFiles_cff import filesRelValProdTTbarAODSIM
+process.source.fileNames = filesRelValProdTTbarAODSIM
+
+process.maxEvents = cms.untracked.PSet( input = cms.untracked.int32(10) )
+
 process.out.outputCommands += ['keep *_ak4PFJetsCHS_*_*',
                                'keep *_patJetsAK4PFCHS_*_*',
                                'keep *_ca8PFJetsCHS_*_*',
                                'keep *_patJetsCA8PFCHS_*_*',
                                'keep *_ak8PFJetsCHS_*_*',
                                'keep *_patJetsAK8PFCHS_*_*']
+
+process.out.fileName = 'jettoolbox.root'
diff --git a/RecoJets/JetProducers/python/jettoolboxMiniHelper_cff.py b/RecoJets/JetProducers/python/jettoolboxMiniHelper_cff.py
index 09ea654..1d6dacd 100644
--- a/RecoJets/JetProducers/python/jettoolboxMiniHelper_cff.py
+++ b/RecoJets/JetProducers/python/jettoolboxMiniHelper_cff.py
@@ -1,7 +1,7 @@
 import FWCore.ParameterSet.Config as cms
 
-process = cms.Process('mini')
-process.maxEvents = cms.untracked.PSet( input = cms.untracked.int32(-1) )
+process = cms.Process('jetToolbox')
+process.maxEvents = cms.untracked.PSet( input = cms.untracked.int32(10) )
 
 process.load('PhysicsTools.PatAlgos.producersLayer1.patCandidates_cff')
 process.load('Configuration.EventContent.EventContent_cff')
@@ -155,12 +155,6 @@ process.out = cms.OutputModule('PoolOutputModule',
                                )
 process.endpath = cms.EndPath(process.out)
 
-
-
-
-
-
-#TMP
 process.source = cms.Source("PoolSource",
-                            fileNames = cms.untracked.vstring("file:/uscms/home/jstupak/miniAOD2/CMSSW_7_0_6/src/miniAOD-prod_PAT.root")
+                            fileNames = cms.untracked.vstring('/store/user/jstupak/ZH_HToBB_ZToLL_M-125_13TeV_powheg-herwigpp/Spring14dr-PU_S14_POSTLS170_V6AN1-v1/140622_185946/0000/miniAOD-prod_PAT_1.root')
                             )
diff --git a/RecoJets/JetProducers/python/jettoolbox_cff.py b/RecoJets/JetProducers/python/jettoolbox_cff.py
new file mode 100644
index 0000000..0271f11
--- /dev/null
+++ b/RecoJets/JetProducers/python/jettoolbox_cff.py
@@ -0,0 +1,62 @@
+import FWCore.ParameterSet.Config as cms
+
+from RecoJets.Configuration.RecoPFJets_cff import ca8PFJetsCHSPrunedLinks, ak8PFJetsCHSPrunedLinks
+
+#- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
+#pileupJetID
+"""
+from RecoJets.JetProducers.pileupjetidproducer_cfi import pileupJetIdCalculator, pileupJetIdEvaluator
+
+pileupJetIdCalculator.jets = cms.InputTag("ak4PFJetsCHS")
+pileupJetIdEvaluator.jets = cms.InputTag("ak4PFJetsCHS")
+pileupJetIdCalculator.rho = cms.InputTag("fixedGridRhoFastjetAll")
+pileupJetIdEvaluator.rho = cms.InputTag("fixedGridRhoFastjetAll")
+"""
+#- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
+#QGTagger
+"""
+from RecoJets.JetProducers.QGTagger_cfi import QGTagger
+
+QGTagger.srcJets = cms.InputTag("ak4PFJetsCHS")
+QGTagger.jetsLabel = cms.string('QGL_AK5PFchs')
+"""
+#- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
+#Njettiness
+
+from RecoJets.JetProducers.nJettinessAdder_cfi import Njettiness
+
+NjettinessCA8 = Njettiness.clone()
+NjettinessCA8.src = cms.InputTag("ca8PFJetsCHS")
+NjettinessCA8.cone = cms.double(0.8)
+
+NjettinessAK8 = NjettinessCA8.clone()
+NjettinessAK8.src = cms.InputTag("ak8PFJetsCHS")
+
+#- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
+#QJetsAdder
+
+RandomNumberGeneratorService = cms.Service("RandomNumberGeneratorService",
+                                                   QJetsAdderCA8 = cms.PSet(initialSeed = cms.untracked.uint32(7)),
+                                                   QJetsAdderAK8 = cms.PSet(initialSeed = cms.untracked.uint32(31)))
+
+from RecoJets.JetProducers.qjetsadder_cfi import QJetsAdder
+
+QJetsAdderCA8 = QJetsAdder.clone()
+QJetsAdderCA8.src = cms.InputTag("ca8PFJetsCHS")
+QJetsAdderCA8.jetRad = cms.double(0.8)
+QJetsAdderCA8.jetAlgo = cms.string('CA')
+
+QJetsAdderAK8 = QJetsAdderCA8.clone()
+QJetsAdderAK8.src = cms.InputTag("ak8PFJetsCHS")
+QJetsAdderAK8.jetAlgo = cms.string('AK')
+
+#- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
+#Grooming valueMaps
+
+cmsTopTagPFJetsCHSLinksCA8 = ca8PFJetsCHSPrunedLinks.clone()
+cmsTopTagPFJetsCHSLinksCA8.src = cms.InputTag("ca8PFJetsCHS")
+cmsTopTagPFJetsCHSLinksCA8.matched = cms.InputTag("cmsTopTagPFJetsCHS")
+
+cmsTopTagPFJetsCHSLinksAK8 = cmsTopTagPFJetsCHSLinksCA8.clone()
+cmsTopTagPFJetsCHSLinksAK8.src = cms.InputTag("ak8PFJetsCHS")
+cmsTopTagPFJetsCHSLinksAK8.matched = cms.InputTag("cmsTopTagPFJetsCHS")
diff --git a/RecoJets/JetProducers/test/jettoolbox_cfg.py b/RecoJets/JetProducers/test/jettoolbox_cfg.py
index 7f8a1fc..d06b175 100644
--- a/RecoJets/JetProducers/test/jettoolbox_cfg.py
+++ b/RecoJets/JetProducers/test/jettoolbox_cfg.py
@@ -1,123 +1,47 @@
 miniAODInput=True
 
+#Prepare all the toolbox inputs
 if miniAODInput:
     from RecoJets.JetProducers.jettoolboxMiniHelper_cff import *
 else:
     from RecoJets.JetProducers.jettoolboxHelper_cff import *
 
-####################################################################################################
-#pileupJetID
-"""
-process.load('RecoJets.JetProducers.pileupjetidproducer_cfi')
-
-process.pileupJetIdCalculator.jets = cms.InputTag("ak4PFJetsCHS")
-process.pileupJetIdEvaluator.jets = cms.InputTag("ak4PFJetsCHS")
-process.pileupJetIdCalculator.rho = cms.InputTag("fixedGridRhoFastjetAll")
-process.pileupJetIdEvaluator.rho = cms.InputTag("fixedGridRhoFastjetAll")
-
-process.patJetsAK4PFCHS.userData.userFloats.src += ['pileupJetIdEvaluator:fullDiscriminant']
-process.patJetsAK4PFCHS.userData.userInts.src += ['pileupJetIdEvaluator:cutbasedId','pileupJetIdEvaluator:fullId']
-process.out.outputCommands += ['keep *_pileupJetIdEvaluator_*_*']
-"""
-#- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
-#QGTagger
-"""
-process.load('RecoJets.JetProducers.QGTagger_cfi')
-
-process.QGTagger.srcJets = cms.InputTag("ak4PFJetsCHS")
-process.QGTagger.jetsLabel = cms.string('QGL_AK5PFchs')
-
-if miniAODInput: process.QGTagger.srcVertexCollection = 'unpackedTracksAndVertices'
-
-process.patJetsAK4PFCHS.userData.userFloats.src += ['QGTagger:qgLikelihood']
-process.out.outputCommands += ['keep *_QGTagger_*_*']
-"""
-#- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
-#Njettiness
-
-process.load('RecoJets.JetProducers.nJettinessAdder_cfi')
-
-process.NjettinessCA8 = process.Njettiness.clone()
-process.NjettinessCA8.src = cms.InputTag("ca8PFJetsCHS")
-process.NjettinessCA8.cone = cms.double(0.8)
-
-process.patJetsCA8PFCHS.userData.userFloats.src += ['NjettinessCA8:tau1','NjettinessCA8:tau2','NjettinessCA8:tau3']
-process.out.outputCommands += ['keep *_NjettinessCA8_*_*']
-
-process.NjettinessAK8 = process.NjettinessCA8.clone()
-process.NjettinessAK8.src = cms.InputTag("ak8PFJetsCHS")
-
-process.patJetsAK8PFCHS.userData.userFloats.src += ['NjettinessAK8:tau1','NjettinessAK8:tau2','NjettinessAK8:tau3']
-process.out.outputCommands += ['keep *_NjettinessAK8_*_*']
-
-#- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
-#QJetsAdder
-
-process.RandomNumberGeneratorService = cms.Service("RandomNumberGeneratorService",
-                                                   QJetsAdderCA8 = cms.PSet(initialSeed = cms.untracked.uint32(7)),
-                                                   QJetsAdderAK8 = cms.PSet(initialSeed = cms.untracked.uint32(31)))
-
-process.load('RecoJets.JetProducers.qjetsadder_cfi')
-
-process.QJetsAdderCA8 = process.QJetsAdder.clone()
-process.QJetsAdderCA8.src = cms.InputTag("ca8PFJetsCHS")
-process.QJetsAdderCA8.jetRad = cms.double(0.8)
-process.QJetsAdderCA8.jetAlgo = cms.string('CA')
-
-process.patJetsCA8PFCHS.userData.userFloats.src += ['QJetsAdderCA8:QjetsVolatility']
-process.out.outputCommands += ['keep *_QJetsAdderCA8_*_*']
-
-process.QJetsAdderAK8 = process.QJetsAdderCA8.clone()
-process.QJetsAdderAK8.src = cms.InputTag("ak8PFJetsCHS")
-process.QJetsAdderAK8.jetAlgo = cms.string('AK')
-
-process.patJetsAK8PFCHS.userData.userFloats.src += ['QJetsAdderAK8:QjetsVolatility']
-process.out.outputCommands += ['keep *_QJetsAdderAK8_*_*']
-                                   
-#- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
-#Grooming valueMaps
-
-process.patJetsCA8PFCHS.userData.userFloats.src += ['ca8PFJetsCHSPrunedLinks','ca8PFJetsCHSTrimmedLinks','ca8PFJetsCHSFilteredLinks']
-process.out.outputCommands += ['keep *_ca8PFJetsCHSPrunedLinks_*_*',
-                               'keep *_ca8PFJetsCHSTrimmedLinks_*_*',
-                               'keep *_ca8PFJetsCHSFilteredLinks_*_*']
-
-process.patJetsAK8PFCHS.userData.userFloats.src += ['ak8PFJetsCHSPrunedLinks','ak8PFJetsCHSTrimmedLinks','ak8PFJetsCHSFilteredLinks']
-process.out.outputCommands += ['keep *_ak8PFJetsCHSPrunedLinks_*_*',
-                               'keep *_ak8PFJetsCHSTrimmedLinks_*_*',
-                               'keep *_ak8PFJetsCHSFilteredLinks_*_*']
-
-process.cmsTopTagPFJetsCHSLinksCA8 = process.ca8PFJetsCHSPrunedLinks.clone()
-process.cmsTopTagPFJetsCHSLinksCA8.src = cms.InputTag("ca8PFJetsCHS")
-process.cmsTopTagPFJetsCHSLinksCA8.matched = cms.InputTag("cmsTopTagPFJetsCHS")
-
-process.patJetsCA8PFCHS.userData.userFloats.src += ['cmsTopTagPFJetsCHSLinksCA8']
-process.out.outputCommands += ['keep *_cmsTopTagPFJetsCHSLinksCA8_*_*']
-
-process.cmsTopTagPFJetsCHSLinksAK8 = process.cmsTopTagPFJetsCHSLinksCA8.clone()
-process.cmsTopTagPFJetsCHSLinksAK8.src = cms.InputTag("ak8PFJetsCHS")
-process.cmsTopTagPFJetsCHSLinksAK8.matched = cms.InputTag("cmsTopTagPFJetsCHS")
-
-process.patJetsAK8PFCHS.userData.userFloats.src += ['cmsTopTagPFJetsCHSLinksAK8']
-process.out.outputCommands += ['keep *_cmsTopTagPFJetsCHSLinksAK8_*_*']
-
-####################################################################################################
-
-## ------------------------------------------------------
-#  In addition you usually want to change the following
-#  parameter:
-## ------------------------------------------------------
-#
-#   process.GlobalTag.globaltag =  ...    ##  (according to https://twiki.cern.ch/twiki/bin/view/CMS/SWGuideFrontierConditions)
-#                                         ##
-
-if miniAODInput:
-    process.source = cms.Source("PoolSource",
-                                fileNames = cms.untracked.vstring('/store/user/jstupak/ZH_HToBB_ZToLL_M-125_13TeV_powheg-herwigpp/Spring14dr-PU_S14_POSTLS170_V6AN1-v1/140622_185946/0000/miniAOD-prod_PAT_1.root')
-                                )
-else:
-    from PhysicsTools.PatAlgos.patInputFiles_cff import filesRelValProdTTbarAODSIM
-    process.source.fileNames = filesRelValProdTTbarAODSIM
-
-process.maxEvents.input = 5
-process.out.fileName = 'jettoolbox.root'
+#Load the toolbox
+process.load('RecoJets.JetProducers.jettoolbox_cff')
+
+if miniAODInput: 
+    #QGTagger.srcVertexCollection = 'unpackedTracksAndVertices'
+    pass
+
+#- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
+#Keep statements for valueMaps (link Reco::Jets to associated quantities)
+#You don't have to keep them to deswizzle below
+
+#out.outputCommands += ['keep *_pileupJetIdEvaluator_*_*',
+#                       'keep *_QGTagger_*_*']
+
+process.out.outputCommands += ['keep *_NjettinessCA8_*_*',
+                               'keep *_QJetsAdderCA8_*_*',
+                               'keep *_ca8PFJetsCHSPrunedLinks_*_*','keep *_ca8PFJetsCHSTrimmedLinks_*_*','keep *_ca8PFJetsCHSFilteredLinks_*_*',
+                               'keep *_cmsTopTagPFJetsCHSLinksCA8_*_*']
+                               
+process.out.outputCommands += ['keep *_NjettinessAK8_*_*',
+                               'keep *_QJetsAdderAK8_*_*',
+                               'keep *_ak8PFJetsCHSPrunedLinks_*_*','keep *_ak8PFJetsCHSTrimmedLinks_*_*','keep *_ak8PFJetsCHSFilteredLinks_*_*',
+                               'keep *_cmsTopTagPFJetsCHSLinksAK8_*_*']
+
+#- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
+#Deswizzle valueMaps and attach to PAT::Jets as userFloats
+
+#process.patJetsAK4PFCHS.userData.userFloats.src += ['pileupJetIdEvaluator:fullDiscriminant','QGTagger:qgLikelihood']
+#process.patJetsAK4PFCHS.userData.userInts.src   += ['pileupJetIdEvaluator:cutbasedId','pileupJetIdEvaluator:fullId']
+
+process.patJetsCA8PFCHS.userData.userFloats.src += ['NjettinessCA8:tau1','NjettinessCA8:tau2','NjettinessCA8:tau3',
+                                                    'QJetsAdderCA8:QjetsVolatility',
+                                                    'ca8PFJetsCHSPrunedLinks','ca8PFJetsCHSTrimmedLinks','ca8PFJetsCHSFilteredLinks',
+                                                    'cmsTopTagPFJetsCHSLinksCA8']
+
+process.patJetsAK8PFCHS.userData.userFloats.src += ['NjettinessAK8:tau1','NjettinessAK8:tau2','NjettinessAK8:tau3',
+                                                    'QJetsAdderAK8:QjetsVolatility',
+                                                    'ak8PFJetsCHSPrunedLinks','ak8PFJetsCHSTrimmedLinks','ak8PFJetsCHSFilteredLinks',
+                                                    'cmsTopTagPFJetsCHSLinksAK8']
-- 
1.8.3.1


From 8be0133842b23046da9f4bd27c400359406585a1 Mon Sep 17 00:00:00 2001
From: Gregor Kasieczka <gregor.kasieczka@cern.ch>
Date: Fri, 7 Nov 2014 15:46:31 +0100
Subject: [PATCH 6/6] Added fastjet-contrib to JetProducers BuildFile

---
 RecoJets/JetProducers/BuildFile.xml | 1 +
 1 file changed, 1 insertion(+)

diff --git a/RecoJets/JetProducers/BuildFile.xml b/RecoJets/JetProducers/BuildFile.xml
index ab2557d..9552728 100644
--- a/RecoJets/JetProducers/BuildFile.xml
+++ b/RecoJets/JetProducers/BuildFile.xml
@@ -10,6 +10,7 @@
 <use   name="DataFormats/CastorReco"/>
 <use   name="CommonTools/Utils"/>
 <use   name="fastjet"/>
+<use   name="fastjet-contrib"/>
 <use   name="roottmva"/>
 <use   name="vdt"/>
 <export>
-- 
1.8.3.1

