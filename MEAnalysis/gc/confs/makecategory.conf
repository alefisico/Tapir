[global]
task        = UserTask           ; Job uses user written scripts
backend     = local              ; Send to local batch system
include = confs/local.conf       ; Should be symlink to kbfi.conf or psi.conf
workdir = work.makecategory

[jobs]
in flight = 100
wall time   = 0:59
memory = 5999

[UserTask]
executable  = makecategory.sh
input files = common.sh env.sh

[parameters]                      
repeat = 1
parameters = sparse_histo_file analysis_spec category[analysis_spec] 
; We want to run a limit job per category
;
; Setting "category type" to "expr"
; executes the category parameter as python eval
; (instead of treating it as whitespace separated list)
; The code below in nicer python would be
; 
; from TTH.Plotting.Datacards.AnalysisSpecification import analysis
; return analysis.groups.keys()
;
; (but we have to cram it into an eval statement)

analysis_spec = src/TTH/Plotting/python/Datacards/AnalysisSpecification.py src/TTH/Plotting/python/Datacards/AnalysisSpecificationDL.py
category = 0
  src/TTH/Plotting/python/Datacards/AnalysisSpecification.py => list(set([c.name for c in __import__('TTH.Plotting.Datacards.AnalysisSpecification',{}, {}, ['analysis']).analysis.categories]))
  src/TTH/Plotting/python/Datacards/AnalysisSpecificationDL.py => list(set([c.name for c in __import__('TTH.Plotting.Datacards.AnalysisSpecificationDL',{}, {}, ['analysis']).analysis.categories]))
category matcher = end
category type = expr
sparse_histo_file = /home/joosep/public_html/tth/histograms/April2016A/sparse_Apr1.root
