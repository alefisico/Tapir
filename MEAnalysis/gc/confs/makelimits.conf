[global]
task        = UserTask           ; Job uses user written scripts
backend     = local              ; Send to local batch system
include = confs/local.conf       ; Should be symlink to kbfi.conf or psi.conf
workdir = work.makelimits

[jobs]
in flight = 100
wall time   = 0:59
memory = 5999
max retry = 0

[UserTask]
executable  = makelimits.sh
input files = common.sh env.sh

[parameters]                      
repeat = 1
; We want to run a limit job per groups of categories 
; (eg SL-combined and each category individually)
;
; Setting "groups type" to "expr"
; executes the groups parameter as python eval
; (instead of treating it as whitespace separated list)
; The code below in nicer python would be
; 
; from TTH.Plotting.Datacards.AnalysisSpecification import analysis
; return analysis.groups.keys()
;
; (but we have to cram it into an eval statement)
parameters = analysis_spec datacarddir[analysis_spec] groups[analysis_spec]
analysis_spec = src/TTH/Plotting/python/Datacards/AnalysisSpecification.py src/TTH/Plotting/python/Datacards/AnalysisSpecificationDL.py
datacarddir = 0
  src/TTH/Plotting/python/Datacards/AnalysisSpecification.py => /home/joosep/tth/gc/makecategory/GC45c610484aa0/AnalysisSpecification/
  src/TTH/Plotting/python/Datacards/AnalysisSpecificationDL.py => /home/joosep/tth/gc/makecategory/GC45c610484aa0/AnalysisSpecificationDL/
datacarddir matcher = end
groups = 0
  src/TTH/Plotting/python/Datacards/AnalysisSpecification.py => [c for c in __import__('TTH.Plotting.Datacards.AnalysisSpecification',{}, {}, ['analysis']).analysis.groups.keys()]
  src/TTH/Plotting/python/Datacards/AnalysisSpecificationDL.py => [c for c in __import__('TTH.Plotting.Datacards.AnalysisSpecificationDL',{}, {}, ['analysis']).analysis.groups.keys()]
groups matcher = end
groups type = expr
