//Autogenerated using tree_header.jl -> no longer autogenerated, can update manually
#ifndef TTH_TREE
#define TTH_TREE

#include <TTree.h>
#include <string>
#include <map>

#define N_MAX 500
#define M_MAX 100
#define T_MAX 100
#define MET_S_MAX 20

//these are simple 'sentinel values' for uninitialized variables
//for clarity, it would be best to use these instead of manually writing -99 etc.
//this way, undefined variables are always unique and one can write functions to recognize them
#define DEF_VAL_FLOAT -9999.0f
#define DEF_VAL_DOUBLE -9999.0d
#define DEF_VAL_INT -9999
#define FLOAT_EPS 0.0000001f
#define DOUBLE_EPS 0.0000001d

//checks if a branch variable is undefined
bool is_undef(int x) { return x==DEF_VAL_INT; };
bool is_undef(float x) { return fabs(x-DEF_VAL_FLOAT) < FLOAT_EPS; };
bool is_undef(double x) { return fabs(x-DEF_VAL_DOUBLE) < DOUBLE_EPS; };

//macros to initialize 1D and 2D (square) arrays
//x is the array, n is the size, y is the initialized value
#define SET_ZERO(x,n,y) for(int i=0;i<n;i++) {x[i]=y;}
#define SET_ZERO_2(x,n,m,y) for(int i=0;i<n;i++) { for(int j=0;j<m;j++) { x[i][j]=y; } }

/*
This is a simple wrapper class for the TTH-specific flat data format.
To use it, one should load the input file in the standard way using
TFile* f = new TFile("ntuple.root");
TTree* _ttree = (TTree*)f->Get("tthNtupleAnalyzer/events");
and then initialize the class using
TTHTree tree(_ttree);

TTHTree contains the C++ variables for all the branches and functions to conveniently set them.
To attach the branches in the read mode (call SetBranchAddress), call
tree.set_branch_addresses();
outside the event loop.
 You can loop over the events in the standard way

 for (unsigned int i=0; i < _ttree->GetEntries(); i++) {
     tree.loop_initialize(); // <-- this makes sure all the branch variables are cleared from the previous entry
     _ttree->GetEntry(i); // <--- loads the branch contents into the branch variables

     for (int njet=0; njet < tree.n__jet; njet++) {
         float x = tree.jet__pt[njet];
         //do something with the jet pt 
     }
*/
class TTHTree {
public:
	TTHTree(TTree* _tree) { tree = _tree; };
	TTree* tree;


	double debug__time1c;
	double debug__time1r;
	
	int event__id;
	int event__json;
	int event__lumi;
	int event__run;

	int trigger__bits[T_MAX];
	float trigger__prescale[T_MAX];

	//b quark from TTH(->bb)
	float gen_b__eta;
	int gen_b__id;
	float gen_b__mass;
	float gen_b__phi;
	float gen_b__pt;
	int gen_b__status;

	//bbar quark from TTH(->bb)
	float gen_bbar__eta;
	int gen_bbar__id;
	float gen_bbar__mass;
	float gen_bbar__phi;
	float gen_bbar__pt;
	int gen_bbar__status;

	float gen_jet__eta[N_MAX];
	int gen_jet__id[N_MAX];
	float gen_jet__mass[N_MAX];
	float gen_jet__phi[N_MAX];
	float gen_jet__pt[N_MAX];
	int gen_jet__status[N_MAX];
	int gen_jet__type[N_MAX];
	float gen_jet_parton__eta[N_MAX];
	int gen_jet_parton__id[N_MAX];
	float gen_jet_parton__mass[N_MAX];
	float gen_jet_parton__phi[N_MAX];
	float gen_jet_parton__pt[N_MAX];
	int gen_jet_parton__status[N_MAX];
	int gen_jet_parton__type[N_MAX];

	float gen_lep__eta[N_MAX];
	int gen_lep__id[N_MAX];
	float gen_lep__mass[N_MAX];
	float gen_lep__phi[N_MAX];
	float gen_lep__pt[N_MAX];
	int gen_lep__status[N_MAX];
	int gen_lep__type[N_MAX];

	float gen_met__phi;
	float gen_met__pt;
	float gen_met__sumet;

	//top quark in ttbar processes
	float gen_t__eta;
	float gen_t__mass;
	float gen_t__phi;
	float gen_t__pt;

	float gen_t__b__eta;
	float gen_t__b__mass;
	float gen_t__b__phi;
	float gen_t__b__pt;
	int gen_t__b__status;
	float gen_t__w_d1__eta;
	int gen_t__w_d1__id;
	float gen_t__w_d1__mass;
	float gen_t__w_d1__phi;
	float gen_t__w_d1__pt;
	int gen_t__w_d1__status;
	float gen_t__w_d2__eta;
	int gen_t__w_d2__id;
	float gen_t__w_d2__mass;
	float gen_t__w_d2__phi;
	float gen_t__w_d2__pt;
	int gen_t__w_d2__status;

	//tbar quark in ttbar processes
	float gen_tbar__eta;
	float gen_tbar__mass;
	float gen_tbar__phi;
	float gen_tbar__pt;

	float gen_tbar__b__eta;
	float gen_tbar__b__mass;
	float gen_tbar__b__phi;
	float gen_tbar__b__pt;
	int gen_tbar__b__status;
	float gen_tbar__w_d1__eta;
	int gen_tbar__w_d1__id;
	float gen_tbar__w_d1__mass;
	float gen_tbar__w_d1__phi;
	float gen_tbar__w_d1__pt;
	int gen_tbar__w_d1__status;
	float gen_tbar__w_d2__eta;
	int gen_tbar__w_d2__id;
	float gen_tbar__w_d2__mass;
	float gen_tbar__w_d2__phi;
	float gen_tbar__w_d2__pt;
	int gen_tbar__w_d2__status;

	//initial top pair decay hypothesis based on leptons
	int hypo1;
	
	//reco-level jets
	float jet__bd_csv[N_MAX];
	float jet__ce_e[N_MAX];
	float jet__ch_e[N_MAX];
	float jet__el_e[N_MAX];
	float jet__energy[N_MAX];
	float jet__eta[N_MAX];
	int jet__id[N_MAX];
	int jet__jetId[N_MAX];
	float jet__mass[N_MAX];
	float jet__mu_e[N_MAX];
	float jet__ne_e[N_MAX];
	float jet__nh_e[N_MAX];
	float jet__ph_e[N_MAX];
	float jet__phi[N_MAX];
	float jet__pileupJetId[N_MAX];
	int jet__pass_pileupJetId[N_MAX];
	float jet__pt[N_MAX];
	float jet__pt_alt[N_MAX]; //uncorrected jet pt
	int jet__type[N_MAX];
	float jet__vtx3DSig[N_MAX];
	float jet__vtx3DVal[N_MAX];
	float jet__vtxMass[N_MAX];
	float jet__vtxNtracks[N_MAX];

	//reco lepton, all ID-s, no particular ordering
	float lep__ch_iso[N_MAX];
	int lep__charge[N_MAX];
	float lep__dxy[N_MAX];
	float lep__dz[N_MAX];
	float lep__ec_iso[N_MAX];
	float lep__eta[N_MAX];
	float lep__hc_iso[N_MAX];
	int lep__id[N_MAX];
	int lep__id_bitmask[N_MAX];
	int lep__is_loose[N_MAX];
	int lep__is_medium[N_MAX];
	int lep__is_tight[N_MAX];
	float lep__mass[N_MAX];
	float lep__mva[N_MAX];
	float lep__p_iso[N_MAX];
	float lep__ph_iso[N_MAX];
	float lep__phi[N_MAX];
	float lep__pt[N_MAX];
	float lep__puch_iso[N_MAX];
	float lep__rel_iso[N_MAX];
	int lep__type[N_MAX];

	//trigger lepton
  	float trig_lep__pt[N_MAX];
  	float trig_lep__eta[N_MAX];
  	float trig_lep__phi[N_MAX];
    int trig_lep__pass[N_MAX];
	
	//trigger lepton
  	float trig_jet__pt[N_MAX];
  	float trig_jet__eta[N_MAX];
  	float trig_jet__phi[N_MAX];
    int trig_jet__pass[N_MAX];

	//gen-level information from LHE
	float lhe__ht;
	int lhe__n_b;
	int lhe__n_c;
	int lhe__n_e;
	int lhe__n_g;
	float lhe__n_j;
	int lhe__n_l;
	
	int n_sim_b;
	int n_sim_c;

	//MET along with systematic shifts
	float met__phi;
	float met__pt;
	float met__sumet;
	float met__pt__en_down;
	float met__pt__en_up;
	float met__pt__shift[MET_S_MAX];
	float met__px__shift[MET_S_MAX];
	float met__py__shift[MET_S_MAX];
	float met__phi__shift[MET_S_MAX];
    
        int n__met_shift;
        int n__jet;      	
	int n__lep;

    //number of primary vertices
	int n__pv;
	int n__pvi;

    //number of trigger identifiers
	int n__tr;

	int n__sig_lep;
    
	int pvi__bx[N_MAX];
	float pvi__n0[N_MAX];
	float pvi__ntrue[N_MAX];

	//identified good signal leptons, number depends on hypothesis
	int sig_lep__charge[N_MAX];
	float sig_lep__eta[N_MAX];
	int sig_lep__id[N_MAX];
	int sig_lep__idx[N_MAX];
	float sig_lep__mass[N_MAX];
	float sig_lep__phi[N_MAX];
	float sig_lep__pt[N_MAX];
	int sig_lep__type[N_MAX];

	float weight__pu;
	float weight__pu_down;
	float weight__pu_up;
	float weight__trigger;
	float weight__trigger_down;
	float weight__trigger_up;
    
	float gen_t__dpt_alt;
	float gen_tbar__dpt_alt;
	float gen_t2__b__eta;
	float gen_t2__b__mass;
	float gen_t2__b__phi;
	float gen_t2__b__pt;
	int gen_t2__b__status;
	float gen_t2__w_d1__eta;
	float gen_t2__w_d1__mass;
	float gen_t2__w_d1__phi;
	float gen_t2__w_d1__pt;
	int gen_t2__w_d1__status;
	float gen_t2__w_d2__eta;
	float gen_t2__w_d2__mass;
	float gen_t2__w_d2__phi;
	float gen_t2__w_d2__pt;
	int gen_t2__w_d2__status;
	float gen_tbar2__b__eta;
	float gen_tbar2__b__mass;
	float gen_tbar2__b__phi;
	float gen_tbar2__b__pt;
	int gen_tbar2__b__status;
	float gen_tbar2__w_d1__eta;
	float gen_tbar2__w_d1__mass;
	float gen_tbar2__w_d1__phi;
	float gen_tbar2__w_d1__pt;
	int gen_tbar2__w_d1__status;
	float gen_tbar2__w_d2__eta;
	float gen_tbar2__w_d2__mass;
	float gen_tbar2__w_d2__phi;
	float gen_tbar2__w_d2__pt;
	int gen_tbar2__w_d2__status;
	int n__jet_fat;
	float jet_fat__pt[N_MAX];
	float jet_fat__eta[N_MAX];
	float jet_fat__phi[N_MAX];
	float jet_fat__mass[N_MAX];
	float jet_fat__tau1[N_MAX];
	float jet_fat__tau2[N_MAX];
	float jet_fat__tau3[N_MAX];
	int n__jet_toptagger;
	int n__jet_toptagger_sj;
	float jet_toptagger__pt[N_MAX];
	float jet_toptagger__mass[N_MAX];
	float jet_toptagger__eta[N_MAX];
	float jet_toptagger__phi[N_MAX];
	float jet_toptagger__energy[N_MAX];
	float jet_toptagger__fj_pt[N_MAX];
	float jet_toptagger__fj_mass[N_MAX];
	float jet_toptagger__fj_eta[N_MAX];
	float jet_toptagger__fj_phi[N_MAX];
	float jet_toptagger__fW[N_MAX];
	float jet_toptagger__massRatioPassed[N_MAX];
	float jet_toptagger__Rmin[N_MAX];
	float jet_toptagger__ptFiltForRminExp[N_MAX];
	float jet_toptagger__RminExpected[N_MAX];
	float jet_toptagger__prunedMass[N_MAX];
	float jet_toptagger__topMass[N_MAX];
	float jet_toptagger__unfilteredMass[N_MAX];
	int jet_toptagger__child_idx[N_MAX];
	int jet_toptagger__isMultiR[N_MAX];
	int jet_toptagger__n_sj[N_MAX];
	float jet_toptagger_sj__energy[N_MAX];
	float jet_toptagger_sj__eta[N_MAX];
	float jet_toptagger_sj__mass[N_MAX];
	float jet_toptagger_sj__phi[N_MAX];
	float jet_toptagger_sj__pt[N_MAX];
	int jet_toptagger_sj__parent_idx[N_MAX];
	int n__jet_toptagger2;
	int n__jet_toptagger2_sj;
	float jet_toptagger2__pt[N_MAX];
	float jet_toptagger2__mass[N_MAX];
	float jet_toptagger2__eta[N_MAX];
	float jet_toptagger2__phi[N_MAX];
	float jet_toptagger2__energy[N_MAX];
	float jet_toptagger2__fj_pt[N_MAX];
	float jet_toptagger2__fj_mass[N_MAX];
	float jet_toptagger2__fj_eta[N_MAX];
	float jet_toptagger2__fj_phi[N_MAX];
	float jet_toptagger2__fW[N_MAX];
	float jet_toptagger2__massRatioPassed[N_MAX];
	float jet_toptagger2__Rmin[N_MAX];
	float jet_toptagger2__ptFiltForRminExp[N_MAX];
	float jet_toptagger2__RminExpected[N_MAX];
	float jet_toptagger2__prunedMass[N_MAX];
	float jet_toptagger2__topMass[N_MAX];
	float jet_toptagger2__unfilteredMass[N_MAX];
	int jet_toptagger2__child_idx[N_MAX];
	int jet_toptagger2__isMultiR[N_MAX];
	int jet_toptagger2__n_sj[N_MAX];
	float jet_toptagger2_sj__energy[N_MAX];
	float jet_toptagger2_sj__eta[N_MAX];
	float jet_toptagger2_sj__mass[N_MAX];
	float jet_toptagger2_sj__phi[N_MAX];
	float jet_toptagger2_sj__pt[N_MAX];
	int jet_toptagger2_sj__parent_idx[N_MAX];
    //HEADERGEN_BRANCH_VARIABLES
    //This comment is for automatic header generation, do not remove

    //initializes all branch variables
	void loop_initialize(void) {
		debug__time1c = DEF_VAL_DOUBLE;
		debug__time1r = DEF_VAL_DOUBLE;
		
		event__id = DEF_VAL_INT;
		event__json = DEF_VAL_INT;
		event__lumi = DEF_VAL_INT;
		event__run = DEF_VAL_INT;
		
		SET_ZERO(trigger__bits, T_MAX, DEF_VAL_INT);
		SET_ZERO(trigger__prescale, T_MAX, DEF_VAL_FLOAT);
		
		gen_b__eta = DEF_VAL_FLOAT;
		gen_b__id = DEF_VAL_INT;
		gen_b__mass = DEF_VAL_FLOAT;
		gen_b__phi = DEF_VAL_FLOAT;
		gen_b__pt = DEF_VAL_FLOAT;
		gen_b__status = DEF_VAL_INT;
		gen_bbar__eta = DEF_VAL_FLOAT;
		gen_bbar__id = DEF_VAL_INT;
		gen_bbar__mass = DEF_VAL_FLOAT;
		gen_bbar__phi = DEF_VAL_FLOAT;
		gen_bbar__pt = DEF_VAL_FLOAT;
		gen_bbar__status = DEF_VAL_INT;

		SET_ZERO(gen_jet__eta, N_MAX, DEF_VAL_FLOAT);
		SET_ZERO(gen_jet__id, N_MAX, DEF_VAL_INT);
		SET_ZERO(gen_jet__mass, N_MAX, DEF_VAL_FLOAT);
		SET_ZERO(gen_jet__phi, N_MAX, DEF_VAL_FLOAT);
		SET_ZERO(gen_jet__pt, N_MAX, DEF_VAL_FLOAT);
		SET_ZERO(gen_jet__status, N_MAX, DEF_VAL_INT);
		SET_ZERO(gen_jet__type, N_MAX, DEF_VAL_INT);
		SET_ZERO(gen_jet_parton__eta, N_MAX, DEF_VAL_FLOAT);
		SET_ZERO(gen_jet_parton__id, N_MAX, DEF_VAL_INT);
		SET_ZERO(gen_jet_parton__mass, N_MAX, DEF_VAL_FLOAT);
		SET_ZERO(gen_jet_parton__phi, N_MAX, DEF_VAL_FLOAT);
		SET_ZERO(gen_jet_parton__pt, N_MAX, DEF_VAL_FLOAT);
		SET_ZERO(gen_jet_parton__status, N_MAX, DEF_VAL_INT);
		SET_ZERO(gen_jet_parton__type, N_MAX, DEF_VAL_INT);
		SET_ZERO(gen_lep__eta, N_MAX, DEF_VAL_FLOAT);
		SET_ZERO(gen_lep__id, N_MAX, DEF_VAL_INT);
		SET_ZERO(gen_lep__mass, N_MAX, DEF_VAL_FLOAT);
		SET_ZERO(gen_lep__phi, N_MAX, DEF_VAL_FLOAT);
		SET_ZERO(gen_lep__pt, N_MAX, DEF_VAL_FLOAT);
		SET_ZERO(gen_lep__status, N_MAX, DEF_VAL_INT);
		SET_ZERO(gen_lep__type, N_MAX, DEF_VAL_INT);
		gen_met__phi = DEF_VAL_FLOAT;
		gen_met__pt = DEF_VAL_FLOAT;
		gen_met__sumet = DEF_VAL_FLOAT;

		gen_t__pt = DEF_VAL_FLOAT;
		gen_t__eta = DEF_VAL_FLOAT;
		gen_t__phi = DEF_VAL_FLOAT;
		gen_t__mass = DEF_VAL_FLOAT;
		gen_t__b__eta = DEF_VAL_FLOAT;
		gen_t__b__mass = DEF_VAL_FLOAT;
		gen_t__b__phi = DEF_VAL_FLOAT;
		gen_t__b__pt = DEF_VAL_FLOAT;
		gen_t__b__status = DEF_VAL_INT;
		gen_t__w_d1__eta = DEF_VAL_FLOAT;
		gen_t__w_d1__id = DEF_VAL_INT;
		gen_t__w_d1__mass = DEF_VAL_FLOAT;
		gen_t__w_d1__phi = DEF_VAL_FLOAT;
		gen_t__w_d1__pt = DEF_VAL_FLOAT;
		gen_t__w_d1__status = DEF_VAL_INT;
		gen_t__w_d2__eta = DEF_VAL_FLOAT;
		gen_t__w_d2__id = DEF_VAL_INT;
		gen_t__w_d2__mass = DEF_VAL_FLOAT;
		gen_t__w_d2__phi = DEF_VAL_FLOAT;
		gen_t__w_d2__pt = DEF_VAL_FLOAT;
		gen_t__w_d2__status = DEF_VAL_INT;

		gen_tbar__pt = DEF_VAL_FLOAT;
		gen_tbar__eta = DEF_VAL_FLOAT;
		gen_tbar__phi = DEF_VAL_FLOAT;
		gen_tbar__mass = DEF_VAL_FLOAT;
		gen_tbar__b__eta = DEF_VAL_FLOAT;
		gen_tbar__b__mass = DEF_VAL_FLOAT;
		gen_tbar__b__phi = DEF_VAL_FLOAT;
		gen_tbar__b__pt = DEF_VAL_FLOAT;
		gen_tbar__b__status = DEF_VAL_INT;
		gen_tbar__w_d1__eta = DEF_VAL_FLOAT;
		gen_tbar__w_d1__id = DEF_VAL_INT;
		gen_tbar__w_d1__mass = DEF_VAL_FLOAT;
		gen_tbar__w_d1__phi = DEF_VAL_FLOAT;
		gen_tbar__w_d1__pt = DEF_VAL_FLOAT;
		gen_tbar__w_d1__status = DEF_VAL_INT;
		gen_tbar__w_d2__eta = DEF_VAL_FLOAT;
		gen_tbar__w_d2__id = DEF_VAL_INT;
		gen_tbar__w_d2__mass = DEF_VAL_FLOAT;
		gen_tbar__w_d2__phi = DEF_VAL_FLOAT;
		gen_tbar__w_d2__pt = DEF_VAL_FLOAT;
		gen_tbar__w_d2__status = DEF_VAL_INT;
		
		hypo1 = DEF_VAL_INT;

		SET_ZERO(jet__bd_csv, N_MAX, DEF_VAL_FLOAT);
		SET_ZERO(jet__ce_e, N_MAX, DEF_VAL_FLOAT);
		SET_ZERO(jet__ch_e, N_MAX, DEF_VAL_FLOAT);
		SET_ZERO(jet__el_e, N_MAX, DEF_VAL_FLOAT);
		SET_ZERO(jet__energy, N_MAX, DEF_VAL_FLOAT);
		SET_ZERO(jet__eta, N_MAX, DEF_VAL_FLOAT);
		SET_ZERO(jet__id, N_MAX, DEF_VAL_INT);
		SET_ZERO(jet__jetId, N_MAX, DEF_VAL_INT);
		SET_ZERO(jet__mass, N_MAX, DEF_VAL_FLOAT);
		SET_ZERO(jet__mu_e, N_MAX, DEF_VAL_FLOAT);
		SET_ZERO(jet__ne_e, N_MAX, DEF_VAL_FLOAT);
		SET_ZERO(jet__nh_e, N_MAX, DEF_VAL_FLOAT);
		SET_ZERO(jet__ph_e, N_MAX, DEF_VAL_FLOAT);
		SET_ZERO(jet__phi, N_MAX, DEF_VAL_FLOAT);
		SET_ZERO(jet__pileupJetId, N_MAX, DEF_VAL_FLOAT);
		SET_ZERO(jet__pass_pileupJetId, N_MAX, DEF_VAL_INT);
		SET_ZERO(jet__pt, N_MAX, DEF_VAL_FLOAT);
		SET_ZERO(jet__pt_alt, N_MAX, DEF_VAL_FLOAT);
		SET_ZERO(jet__type, N_MAX, DEF_VAL_INT);
		SET_ZERO(jet__vtx3DSig, N_MAX, DEF_VAL_FLOAT);
		SET_ZERO(jet__vtx3DVal, N_MAX, DEF_VAL_FLOAT);
		SET_ZERO(jet__vtxMass, N_MAX, DEF_VAL_FLOAT);
		SET_ZERO(jet__vtxNtracks, N_MAX, DEF_VAL_FLOAT);

		SET_ZERO(lep__ch_iso, N_MAX, DEF_VAL_FLOAT);
		SET_ZERO(lep__charge, N_MAX, DEF_VAL_INT);
		SET_ZERO(lep__dxy, N_MAX, DEF_VAL_FLOAT);
		SET_ZERO(lep__dz, N_MAX, DEF_VAL_FLOAT);
		SET_ZERO(lep__ec_iso, N_MAX, DEF_VAL_FLOAT);
		SET_ZERO(lep__eta, N_MAX, DEF_VAL_FLOAT);
		SET_ZERO(lep__hc_iso, N_MAX, DEF_VAL_FLOAT);
		SET_ZERO(lep__id, N_MAX, DEF_VAL_INT);
		SET_ZERO(lep__id_bitmask, N_MAX, DEF_VAL_INT);
		SET_ZERO(lep__is_loose, N_MAX, DEF_VAL_INT);
		SET_ZERO(lep__is_medium, N_MAX, DEF_VAL_INT);
		SET_ZERO(lep__is_tight, N_MAX, DEF_VAL_INT);
		SET_ZERO(lep__mass, N_MAX, DEF_VAL_FLOAT);
		SET_ZERO(lep__mva, N_MAX, DEF_VAL_FLOAT);
		SET_ZERO(lep__p_iso, N_MAX, DEF_VAL_FLOAT);
		SET_ZERO(lep__ph_iso, N_MAX, DEF_VAL_FLOAT);
		SET_ZERO(lep__phi, N_MAX, DEF_VAL_FLOAT);
		SET_ZERO(lep__pt, N_MAX, DEF_VAL_FLOAT);
		SET_ZERO(lep__puch_iso, N_MAX, DEF_VAL_FLOAT);
		SET_ZERO(lep__rel_iso,  N_MAX, DEF_VAL_FLOAT);
		SET_ZERO(trig_lep__pt,  N_MAX, DEF_VAL_FLOAT);
		SET_ZERO(trig_lep__eta, N_MAX, DEF_VAL_FLOAT);
		SET_ZERO(trig_lep__phi, N_MAX, DEF_VAL_FLOAT);
		SET_ZERO(trig_lep__pass,N_MAX, DEF_VAL_INT);
		SET_ZERO(trig_jet__pt,  N_MAX, DEF_VAL_FLOAT);
		SET_ZERO(trig_jet__eta, N_MAX, DEF_VAL_FLOAT);
		SET_ZERO(trig_jet__phi, N_MAX, DEF_VAL_FLOAT);
		SET_ZERO(trig_jet__pass,N_MAX, DEF_VAL_INT);
		SET_ZERO(lep__rel_iso, N_MAX, DEF_VAL_FLOAT);
		SET_ZERO(lep__type, N_MAX, DEF_VAL_INT);
		lhe__ht = DEF_VAL_FLOAT;
		lhe__n_b = DEF_VAL_INT;
		lhe__n_c = DEF_VAL_INT;
		lhe__n_e = DEF_VAL_INT;
		lhe__n_g = DEF_VAL_INT;
		lhe__n_j = DEF_VAL_FLOAT;
		lhe__n_l = DEF_VAL_INT;
		
		n_sim_b = DEF_VAL_INT;
		n_sim_c = DEF_VAL_INT;
		
		met__phi = DEF_VAL_FLOAT;
		met__pt = DEF_VAL_FLOAT;
		met__sumet = DEF_VAL_FLOAT;
		SET_ZERO(met__pt__shift,  MET_S_MAX, DEF_VAL_FLOAT);
		SET_ZERO(met__px__shift,  MET_S_MAX, DEF_VAL_FLOAT);
		SET_ZERO(met__py__shift,  MET_S_MAX, DEF_VAL_FLOAT);
		SET_ZERO(met__phi__shift, MET_S_MAX, DEF_VAL_FLOAT);
		n__jet = DEF_VAL_INT;
		
		n__lep = DEF_VAL_INT;
		n__tr  = DEF_VAL_INT;
		n__pv  = DEF_VAL_INT;
		n__pvi = DEF_VAL_INT;
        n__met_shift = DEF_VAL_INT;
		n__sig_lep = DEF_VAL_INT;
		SET_ZERO(pvi__bx, N_MAX, DEF_VAL_INT);
		SET_ZERO(pvi__n0, N_MAX, DEF_VAL_FLOAT);
		SET_ZERO(pvi__ntrue, N_MAX, DEF_VAL_FLOAT);
		SET_ZERO(sig_lep__charge, N_MAX, DEF_VAL_INT);
		SET_ZERO(sig_lep__eta, N_MAX, DEF_VAL_FLOAT);
		SET_ZERO(sig_lep__id, N_MAX, DEF_VAL_INT);
		SET_ZERO(sig_lep__idx, N_MAX, DEF_VAL_INT);
		SET_ZERO(sig_lep__mass, N_MAX, DEF_VAL_FLOAT);
		SET_ZERO(sig_lep__phi, N_MAX, DEF_VAL_FLOAT);
		SET_ZERO(sig_lep__pt, N_MAX, DEF_VAL_FLOAT);
		SET_ZERO(sig_lep__type, N_MAX, DEF_VAL_INT);
		weight__pu = DEF_VAL_FLOAT;
		weight__pu_down = DEF_VAL_FLOAT;
		weight__pu_up = DEF_VAL_FLOAT;
		weight__trigger = DEF_VAL_FLOAT;
		weight__trigger_down = DEF_VAL_FLOAT;
		weight__trigger_up = DEF_VAL_FLOAT;
        
		gen_t__dpt_alt = DEF_VAL_FLOAT;
		gen_tbar__dpt_alt = DEF_VAL_FLOAT;
		gen_t2__b__eta = DEF_VAL_FLOAT;
		gen_t2__b__mass = DEF_VAL_FLOAT;
		gen_t2__b__phi = DEF_VAL_FLOAT;
		gen_t2__b__pt = DEF_VAL_FLOAT;
		gen_t2__b__status = DEF_VAL_INT;
		gen_t2__w_d1__eta = DEF_VAL_FLOAT;
		gen_t2__w_d1__mass = DEF_VAL_FLOAT;
		gen_t2__w_d1__phi = DEF_VAL_FLOAT;
		gen_t2__w_d1__pt = DEF_VAL_FLOAT;
		gen_t2__w_d1__status = DEF_VAL_INT;
		gen_t2__w_d2__eta = DEF_VAL_FLOAT;
		gen_t2__w_d2__mass = DEF_VAL_FLOAT;
		gen_t2__w_d2__phi = DEF_VAL_FLOAT;
		gen_t2__w_d2__pt = DEF_VAL_FLOAT;
		gen_t2__w_d2__status = DEF_VAL_INT;
		gen_tbar2__b__eta = DEF_VAL_FLOAT;
		gen_tbar2__b__mass = DEF_VAL_FLOAT;
		gen_tbar2__b__phi = DEF_VAL_FLOAT;
		gen_tbar2__b__pt = DEF_VAL_FLOAT;
		gen_tbar2__b__status = DEF_VAL_INT;
		gen_tbar2__w_d1__eta = DEF_VAL_FLOAT;
		gen_tbar2__w_d1__mass = DEF_VAL_FLOAT;
		gen_tbar2__w_d1__phi = DEF_VAL_FLOAT;
		gen_tbar2__w_d1__pt = DEF_VAL_FLOAT;
		gen_tbar2__w_d1__status = DEF_VAL_INT;
		gen_tbar2__w_d2__eta = DEF_VAL_FLOAT;
		gen_tbar2__w_d2__mass = DEF_VAL_FLOAT;
		gen_tbar2__w_d2__phi = DEF_VAL_FLOAT;
		gen_tbar2__w_d2__pt = DEF_VAL_FLOAT;
		gen_tbar2__w_d2__status = DEF_VAL_INT;
		n__jet_fat = DEF_VAL_INT;
		SET_ZERO(jet_fat__pt, N_MAX, DEF_VAL_FLOAT);
		SET_ZERO(jet_fat__eta, N_MAX, DEF_VAL_FLOAT);
		SET_ZERO(jet_fat__phi, N_MAX, DEF_VAL_FLOAT);
		SET_ZERO(jet_fat__mass, N_MAX, DEF_VAL_FLOAT);
		SET_ZERO(jet_fat__tau1, N_MAX, DEF_VAL_FLOAT);
		SET_ZERO(jet_fat__tau2, N_MAX, DEF_VAL_FLOAT);
		SET_ZERO(jet_fat__tau3, N_MAX, DEF_VAL_FLOAT);
		n__jet_toptagger = DEF_VAL_INT;
		n__jet_toptagger_sj = DEF_VAL_INT;
		SET_ZERO(jet_toptagger__pt, N_MAX, DEF_VAL_FLOAT);
		SET_ZERO(jet_toptagger__mass, N_MAX, DEF_VAL_FLOAT);
		SET_ZERO(jet_toptagger__eta, N_MAX, DEF_VAL_FLOAT);
		SET_ZERO(jet_toptagger__phi, N_MAX, DEF_VAL_FLOAT);
		SET_ZERO(jet_toptagger__energy, N_MAX, DEF_VAL_FLOAT);
		SET_ZERO(jet_toptagger__fj_pt, N_MAX, DEF_VAL_FLOAT);
		SET_ZERO(jet_toptagger__fj_mass, N_MAX, DEF_VAL_FLOAT);
		SET_ZERO(jet_toptagger__fj_eta, N_MAX, DEF_VAL_FLOAT);
		SET_ZERO(jet_toptagger__fj_phi, N_MAX, DEF_VAL_FLOAT);
		SET_ZERO(jet_toptagger__fW, N_MAX, DEF_VAL_FLOAT);
		SET_ZERO(jet_toptagger__massRatioPassed, N_MAX, DEF_VAL_FLOAT);
		SET_ZERO(jet_toptagger__Rmin, N_MAX, DEF_VAL_FLOAT);
		SET_ZERO(jet_toptagger__ptFiltForRminExp, N_MAX, DEF_VAL_FLOAT);
		SET_ZERO(jet_toptagger__RminExpected, N_MAX, DEF_VAL_FLOAT);
		SET_ZERO(jet_toptagger__prunedMass, N_MAX, DEF_VAL_FLOAT);
		SET_ZERO(jet_toptagger__topMass, N_MAX, DEF_VAL_FLOAT);
		SET_ZERO(jet_toptagger__unfilteredMass, N_MAX, DEF_VAL_FLOAT);
		SET_ZERO(jet_toptagger__child_idx, N_MAX, DEF_VAL_INT);
		SET_ZERO(jet_toptagger__isMultiR, N_MAX, DEF_VAL_INT);
		SET_ZERO(jet_toptagger__n_sj, N_MAX, DEF_VAL_INT);
		SET_ZERO(jet_toptagger_sj__energy, N_MAX, DEF_VAL_FLOAT);
		SET_ZERO(jet_toptagger_sj__eta, N_MAX, DEF_VAL_FLOAT);
		SET_ZERO(jet_toptagger_sj__mass, N_MAX, DEF_VAL_FLOAT);
		SET_ZERO(jet_toptagger_sj__phi, N_MAX, DEF_VAL_FLOAT);
		SET_ZERO(jet_toptagger_sj__pt, N_MAX, DEF_VAL_FLOAT);
		SET_ZERO(jet_toptagger_sj__parent_idx, N_MAX, DEF_VAL_INT);
		n__jet_toptagger2 = DEF_VAL_INT;
		n__jet_toptagger2_sj = DEF_VAL_INT;
		SET_ZERO(jet_toptagger2__pt, N_MAX, DEF_VAL_FLOAT);
		SET_ZERO(jet_toptagger2__mass, N_MAX, DEF_VAL_FLOAT);
		SET_ZERO(jet_toptagger2__eta, N_MAX, DEF_VAL_FLOAT);
		SET_ZERO(jet_toptagger2__phi, N_MAX, DEF_VAL_FLOAT);
		SET_ZERO(jet_toptagger2__energy, N_MAX, DEF_VAL_FLOAT);
		SET_ZERO(jet_toptagger2__fj_pt, N_MAX, DEF_VAL_FLOAT);
		SET_ZERO(jet_toptagger2__fj_mass, N_MAX, DEF_VAL_FLOAT);
		SET_ZERO(jet_toptagger2__fj_eta, N_MAX, DEF_VAL_FLOAT);
		SET_ZERO(jet_toptagger2__fj_phi, N_MAX, DEF_VAL_FLOAT);
		SET_ZERO(jet_toptagger2__fW, N_MAX, DEF_VAL_FLOAT);
		SET_ZERO(jet_toptagger2__massRatioPassed, N_MAX, DEF_VAL_FLOAT);
		SET_ZERO(jet_toptagger2__Rmin, N_MAX, DEF_VAL_FLOAT);
		SET_ZERO(jet_toptagger2__ptFiltForRminExp, N_MAX, DEF_VAL_FLOAT);
		SET_ZERO(jet_toptagger2__RminExpected, N_MAX, DEF_VAL_FLOAT);
		SET_ZERO(jet_toptagger2__prunedMass, N_MAX, DEF_VAL_FLOAT);
		SET_ZERO(jet_toptagger2__topMass, N_MAX, DEF_VAL_FLOAT);
		SET_ZERO(jet_toptagger2__unfilteredMass, N_MAX, DEF_VAL_FLOAT);
		SET_ZERO(jet_toptagger2__child_idx, N_MAX, DEF_VAL_INT);
		SET_ZERO(jet_toptagger2__isMultiR, N_MAX, DEF_VAL_INT);
		SET_ZERO(jet_toptagger2__n_sj, N_MAX, DEF_VAL_INT);
		SET_ZERO(jet_toptagger2_sj__energy, N_MAX, DEF_VAL_FLOAT);
		SET_ZERO(jet_toptagger2_sj__eta, N_MAX, DEF_VAL_FLOAT);
		SET_ZERO(jet_toptagger2_sj__mass, N_MAX, DEF_VAL_FLOAT);
		SET_ZERO(jet_toptagger2_sj__phi, N_MAX, DEF_VAL_FLOAT);
		SET_ZERO(jet_toptagger2_sj__pt, N_MAX, DEF_VAL_FLOAT);
		SET_ZERO(jet_toptagger2_sj__parent_idx, N_MAX, DEF_VAL_INT);
        //HEADERGEN_BRANCH_INITIALIZERS
	}

    //makes branches on a new TTree
	void make_branches(void) {
		tree->Branch("event__id", &event__id, "event__id/I");
		tree->Branch("event__json", &event__json, "event__json/I");
		tree->Branch("event__lumi", &event__lumi, "event__lumi/I");
		tree->Branch("event__run", &event__run, "event__run/I");
		tree->Branch("gen_b__id", &gen_b__id, "gen_b__id/I");
		tree->Branch("gen_b__status", &gen_b__status, "gen_b__status/I");
		tree->Branch("gen_bbar__id", &gen_bbar__id, "gen_bbar__id/I");
		tree->Branch("gen_bbar__status", &gen_bbar__status, "gen_bbar__status/I");
		tree->Branch("gen_t__b__status", &gen_t__b__status, "gen_t__b__status/I");
		tree->Branch("gen_t__w_d1__id", &gen_t__w_d1__id, "gen_t__w_d1__id/I");
		tree->Branch("gen_t__w_d1__status", &gen_t__w_d1__status, "gen_t__w_d1__status/I");
		tree->Branch("gen_t__w_d2__id", &gen_t__w_d2__id, "gen_t__w_d2__id/I");
		tree->Branch("gen_t__w_d2__status", &gen_t__w_d2__status, "gen_t__w_d2__status/I");
		tree->Branch("gen_tbar__b__status", &gen_tbar__b__status, "gen_tbar__b__status/I");
		tree->Branch("gen_tbar__w_d1__id", &gen_tbar__w_d1__id, "gen_tbar__w_d1__id/I");
		tree->Branch("gen_tbar__w_d1__status", &gen_tbar__w_d1__status, "gen_tbar__w_d1__status/I");
		tree->Branch("gen_tbar__w_d2__id", &gen_tbar__w_d2__id, "gen_tbar__w_d2__id/I");
		tree->Branch("gen_tbar__w_d2__status", &gen_tbar__w_d2__status, "gen_tbar__w_d2__status/I");
		
		tree->Branch("hypo1", &hypo1, "hypo1/I");
		
		tree->Branch("lhe__n_b", &lhe__n_b, "lhe__n_b/I");
		tree->Branch("lhe__n_c", &lhe__n_c, "lhe__n_c/I");
		tree->Branch("lhe__n_e", &lhe__n_e, "lhe__n_e/I");
		tree->Branch("lhe__n_g", &lhe__n_g, "lhe__n_g/I");
		tree->Branch("lhe__n_l", &lhe__n_l, "lhe__n_l/I");
		tree->Branch("n_sim_b", &n_sim_b, "n_sim_b/I");
		tree->Branch("n_sim_c", &n_sim_c, "n_sim_c/I");

		tree->Branch("n__jet", &n__jet, "n__jet/I");
		
		tree->Branch("n__lep", &n__lep, "n__lep/I");
		tree->Branch("n__pv", &n__pv, "n__pv/I");
		tree->Branch("n__pvi", &n__pvi, "n__pvi/I");
		tree->Branch("n__tr", &n__tr, "n__tr/I");
		tree->Branch("n__met_shift", &n__met_shift, "n__met_shift/I");
		tree->Branch("n__sig_lep", &n__sig_lep, "n__sig_lep/I");
		tree->Branch("debug__time1c", &debug__time1c, "debug__time1c/D");
		tree->Branch("debug__time1r", &debug__time1r, "debug__time1r/D");
		tree->Branch("trigger__bits", trigger__bits, "trigger__bits[n__tr]/I");
		tree->Branch("trigger__prescale", trigger__prescale, "trigger__prescale[n__tr]/F");
		tree->Branch("gen_b__eta", &gen_b__eta, "gen_b__eta/F");
		tree->Branch("gen_b__mass", &gen_b__mass, "gen_b__mass/F");
		tree->Branch("gen_b__phi", &gen_b__phi, "gen_b__phi/F");
		tree->Branch("gen_b__pt", &gen_b__pt, "gen_b__pt/F");
		tree->Branch("gen_bbar__eta", &gen_bbar__eta, "gen_bbar__eta/F");
		tree->Branch("gen_bbar__mass", &gen_bbar__mass, "gen_bbar__mass/F");
		tree->Branch("gen_bbar__phi", &gen_bbar__phi, "gen_bbar__phi/F");
		tree->Branch("gen_bbar__pt", &gen_bbar__pt, "gen_bbar__pt/F");
		tree->Branch("gen_jet__eta", gen_jet__eta, "gen_jet__eta[n__jet]/F");
		tree->Branch("gen_jet__id", gen_jet__id, "gen_jet__id[n__jet]/I");
		tree->Branch("gen_jet__mass", gen_jet__mass, "gen_jet__mass[n__jet]/F");
		tree->Branch("gen_jet__phi", gen_jet__phi, "gen_jet__phi[n__jet]/F");
		tree->Branch("gen_jet__pt", gen_jet__pt, "gen_jet__pt[n__jet]/F");
		tree->Branch("gen_jet__status", gen_jet__status, "gen_jet__status[n__jet]/I");
		tree->Branch("gen_jet__type", gen_jet__type, "gen_jet__type[n__jet]/I");
		tree->Branch("gen_jet_parton__eta", gen_jet_parton__eta, "gen_jet_parton__eta[n__jet]/F");
		tree->Branch("gen_jet_parton__id", gen_jet_parton__id, "gen_jet_parton__id[n__jet]/I");
		tree->Branch("gen_jet_parton__mass", gen_jet_parton__mass, "gen_jet_parton__mass[n__jet]/F");
		tree->Branch("gen_jet_parton__phi", gen_jet_parton__phi, "gen_jet_parton__phi[n__jet]/F");
		tree->Branch("gen_jet_parton__pt", gen_jet_parton__pt, "gen_jet_parton__pt[n__jet]/F");
		tree->Branch("gen_jet_parton__status", gen_jet_parton__status, "gen_jet_parton__status[n__jet]/I");
		tree->Branch("gen_jet_parton__type", gen_jet_parton__type, "gen_jet_parton__type[n__jet]/I");
		tree->Branch("gen_lep__eta", gen_lep__eta, "gen_lep__eta[n__lep]/F");
		tree->Branch("gen_lep__id", gen_lep__id, "gen_lep__id[n__lep]/I");
		tree->Branch("gen_lep__mass", gen_lep__mass, "gen_lep__mass[n__lep]/F");
		tree->Branch("gen_lep__phi", gen_lep__phi, "gen_lep__phi[n__lep]/F");
		tree->Branch("gen_lep__pt", gen_lep__pt, "gen_lep__pt[n__lep]/F");
		tree->Branch("gen_lep__status", gen_lep__status, "gen_lep__status[n__lep]/I");
		tree->Branch("gen_lep__type", gen_lep__type, "gen_lep__type[n__lep]/I");
		tree->Branch("gen_met__phi", &gen_met__phi, "gen_met__phi/F");
		tree->Branch("gen_met__pt", &gen_met__pt, "gen_met__pt/F");
		tree->Branch("gen_met__sumet", &gen_met__sumet, "gen_met__sumet/F");
		
		tree->Branch("gen_t__eta", &gen_t__eta, "gen_t__eta/F");
		tree->Branch("gen_t__mass", &gen_t__mass, "gen_t__mass/F");
		tree->Branch("gen_t__phi", &gen_t__phi, "gen_t__phi/F");
		tree->Branch("gen_t__pt", &gen_t__pt, "gen_t__pt/F");

		tree->Branch("gen_t__b__eta", &gen_t__b__eta, "gen_t__b__eta/F");
		tree->Branch("gen_t__b__mass", &gen_t__b__mass, "gen_t__b__mass/F");
		tree->Branch("gen_t__b__phi", &gen_t__b__phi, "gen_t__b__phi/F");
		tree->Branch("gen_t__b__pt", &gen_t__b__pt, "gen_t__b__pt/F");
		tree->Branch("gen_t__w_d1__eta", &gen_t__w_d1__eta, "gen_t__w_d1__eta/F");
		tree->Branch("gen_t__w_d1__mass", &gen_t__w_d1__mass, "gen_t__w_d1__mass/F");
		tree->Branch("gen_t__w_d1__phi", &gen_t__w_d1__phi, "gen_t__w_d1__phi/F");
		tree->Branch("gen_t__w_d1__pt", &gen_t__w_d1__pt, "gen_t__w_d1__pt/F");
		tree->Branch("gen_t__w_d2__eta", &gen_t__w_d2__eta, "gen_t__w_d2__eta/F");
		tree->Branch("gen_t__w_d2__mass", &gen_t__w_d2__mass, "gen_t__w_d2__mass/F");
		tree->Branch("gen_t__w_d2__phi", &gen_t__w_d2__phi, "gen_t__w_d2__phi/F");
		tree->Branch("gen_t__w_d2__pt", &gen_t__w_d2__pt, "gen_t__w_d2__pt/F");
		
		tree->Branch("gen_tbar__eta", &gen_tbar__eta, "gen_tbar__eta/F");
		tree->Branch("gen_tbar__mass", &gen_tbar__mass, "gen_tbar__mass/F");
		tree->Branch("gen_tbar__phi", &gen_tbar__phi, "gen_tbar__phi/F");
		tree->Branch("gen_tbar__pt", &gen_tbar__pt, "gen_tbar__pt/F");
		
		tree->Branch("gen_tbar__b__eta", &gen_tbar__b__eta, "gen_tbar__b__eta/F");
		tree->Branch("gen_tbar__b__mass", &gen_tbar__b__mass, "gen_tbar__b__mass/F");
		tree->Branch("gen_tbar__b__phi", &gen_tbar__b__phi, "gen_tbar__b__phi/F");
		tree->Branch("gen_tbar__b__pt", &gen_tbar__b__pt, "gen_tbar__b__pt/F");
		tree->Branch("gen_tbar__w_d1__eta", &gen_tbar__w_d1__eta, "gen_tbar__w_d1__eta/F");
		tree->Branch("gen_tbar__w_d1__mass", &gen_tbar__w_d1__mass, "gen_tbar__w_d1__mass/F");
		tree->Branch("gen_tbar__w_d1__phi", &gen_tbar__w_d1__phi, "gen_tbar__w_d1__phi/F");
		tree->Branch("gen_tbar__w_d1__pt", &gen_tbar__w_d1__pt, "gen_tbar__w_d1__pt/F");
		tree->Branch("gen_tbar__w_d2__eta", &gen_tbar__w_d2__eta, "gen_tbar__w_d2__eta/F");
		tree->Branch("gen_tbar__w_d2__mass", &gen_tbar__w_d2__mass, "gen_tbar__w_d2__mass/F");
		tree->Branch("gen_tbar__w_d2__phi", &gen_tbar__w_d2__phi, "gen_tbar__w_d2__phi/F");
		tree->Branch("gen_tbar__w_d2__pt", &gen_tbar__w_d2__pt, "gen_tbar__w_d2__pt/F");
		
		tree->Branch("jet__bd_csv", jet__bd_csv, "jet__bd_csv[n__jet]/F");
		tree->Branch("jet__ce_e", jet__ce_e, "jet__ce_e[n__jet]/F");
		tree->Branch("jet__ch_e", jet__ch_e, "jet__ch_e[n__jet]/F");
		tree->Branch("jet__el_e", jet__el_e, "jet__el_e[n__jet]/F");
		tree->Branch("jet__energy", jet__energy, "jet__energy[n__jet]/F");
		tree->Branch("jet__eta", jet__eta, "jet__eta[n__jet]/F");
		tree->Branch("jet__id", jet__id, "jet__id[n__jet]/I");
		tree->Branch("jet__jetId", jet__jetId, "jet__jetId[n__jet]/I");
		tree->Branch("jet__mass", jet__mass, "jet__mass[n__jet]/F");
		tree->Branch("jet__mu_e", jet__mu_e, "jet__mu_e[n__jet]/F");
		tree->Branch("jet__ne_e", jet__ne_e, "jet__ne_e[n__jet]/F");
		tree->Branch("jet__nh_e", jet__nh_e, "jet__nh_e[n__jet]/F");
		tree->Branch("jet__ph_e", jet__ph_e, "jet__ph_e[n__jet]/F");
		tree->Branch("jet__phi", jet__phi, "jet__phi[n__jet]/F");
		tree->Branch("jet__pileupJetId", jet__pileupJetId, "jet__pileupJetId[n__jet]/F");
		tree->Branch("jet__pass_pileupJetId", jet__pass_pileupJetId, "jet__pass_pileupJetId[n__jet]/I");
		tree->Branch("jet__pt", jet__pt, "jet__pt[n__jet]/F");
		tree->Branch("jet__pt_alt", jet__pt_alt, "jet__pt_alt[n__jet]/F");
		tree->Branch("jet__type", jet__type, "jet__type[n__jet]/I");
		tree->Branch("jet__vtx3DSig", jet__vtx3DSig, "jet__vtx3DSig[n__jet]/F");
		tree->Branch("jet__vtx3DVal", jet__vtx3DVal, "jet__vtx3DVal[n__jet]/F");
		tree->Branch("jet__vtxMass", jet__vtxMass, "jet__vtxMass[n__jet]/F");
		tree->Branch("jet__vtxNtracks", jet__vtxNtracks, "jet__vtxNtracks[n__jet]/F");
		
		
		tree->Branch("lep__ch_iso", lep__ch_iso, "lep__ch_iso[n__lep]/F");
		tree->Branch("lep__charge", lep__charge, "lep__charge[n__lep]/I");
		tree->Branch("lep__dxy", lep__dxy, "lep__dxy[n__lep]/F");
		tree->Branch("lep__dz", lep__dz, "lep__dz[n__lep]/F");
		tree->Branch("lep__ec_iso", lep__ec_iso, "lep__ec_iso[n__lep]/F");
		tree->Branch("lep__eta", lep__eta, "lep__eta[n__lep]/F");
		tree->Branch("lep__hc_iso", lep__hc_iso, "lep__hc_iso[n__lep]/F");
		tree->Branch("lep__id", lep__id, "lep__id[n__lep]/I");
		tree->Branch("lep__id_bitmask", lep__id_bitmask, "lep__id_bitmask[n__lep]/I");
		tree->Branch("lep__is_loose", lep__is_loose, "lep__is_loose[n__lep]/I");
		tree->Branch("lep__is_medium", lep__is_medium, "lep__is_medium[n__lep]/I");
		tree->Branch("lep__is_tight", lep__is_tight, "lep__is_tight[n__lep]/I");
		tree->Branch("lep__mass", lep__mass, "lep__mass[n__lep]/F");
		tree->Branch("lep__mva", lep__mva, "lep__mva[n__lep]/F");
		tree->Branch("lep__p_iso", lep__p_iso, "lep__p_iso[n__lep]/F");
		tree->Branch("lep__ph_iso", lep__ph_iso, "lep__ph_iso[n__lep]/F");
		tree->Branch("lep__phi", lep__phi, "lep__phi[n__lep]/F");
		tree->Branch("lep__pt", lep__pt, "lep__pt[n__lep]/F");
		tree->Branch("lep__puch_iso", lep__puch_iso, "lep__puch_iso[n__lep]/F");
		tree->Branch("lep__rel_iso", lep__rel_iso, "lep__rel_iso[n__lep]/F");
		tree->Branch("trig_lep__pt", trig_lep__pt, "trig_lep__pt[n__lep]/F");
		tree->Branch("trig_lep__eta", trig_lep__eta, "trig_lep__eta[n__lep]/F");
		tree->Branch("trig_lep__phi", trig_lep__phi, "trig_lep__phi[n__lep]/F");
		tree->Branch("trig_lep__pass", trig_lep__pass, "trig_lep__pass[n__lep]/I");
		tree->Branch("trig_jet__pt", trig_jet__pt, "trig_jet__pt[n__jet]/F");
		tree->Branch("trig_jet__eta", trig_jet__eta, "trig_jet__eta[n__jet]/F");
		tree->Branch("trig_jet__phi", trig_jet__phi, "trig_jet__phi[n__jet]/F");
		tree->Branch("trig_jet__pass", trig_jet__pass, "trig_jet__pass[n__jet]/I");
		tree->Branch("lep__type", lep__type, "lep__type[n__lep]/I");
		tree->Branch("lhe__ht", &lhe__ht, "lhe__ht/F");
		tree->Branch("lhe__n_j", &lhe__n_j, "lhe__n_j/F");
		tree->Branch("met__phi", &met__phi, "met__phi/F");
		tree->Branch("met__pt", &met__pt, "met__pt/F");
		tree->Branch("met__sumet", &met__sumet, "met__sumet/F");
		tree->Branch("met__pt__shift", met__pt__shift, "met__pt__shift[n__met_shift]/F");
		tree->Branch("met__px__shift", met__px__shift, "met__px__shift[n__met_shift]/F");
		tree->Branch("met__py__shift", met__py__shift, "met__py__shift[n__met_shift]/F");
		tree->Branch("met__phi__shift", met__phi__shift, "met__phi__shift[n__met_shift]/F");
		tree->Branch("met__pt__en_down", &met__pt__en_down, "met__pt__en_down/F");
		tree->Branch("met__pt__en_up", &met__pt__en_up, "met__pt__en_up/F");
		tree->Branch("pvi__bx", pvi__bx, "pvi__bx[n__pvi]/I");
		tree->Branch("pvi__n0", pvi__n0, "pvi__n0[n__pvi]/F");
		tree->Branch("pvi__ntrue", pvi__ntrue, "pvi__ntrue[n__pvi]/F");
		tree->Branch("sig_lep__charge", sig_lep__charge, "sig_lep__charge[n__sig_lep]/I");
		tree->Branch("sig_lep__eta", sig_lep__eta, "sig_lep__eta[n__sig_lep]/F");
		tree->Branch("sig_lep__id", sig_lep__id, "sig_lep__id[n__sig_lep]/I");
		tree->Branch("sig_lep__idx", sig_lep__idx, "sig_lep__idx[n__sig_lep]/I");
		tree->Branch("sig_lep__mass", sig_lep__mass, "sig_lep__mass[n__sig_lep]/F");
		tree->Branch("sig_lep__phi", sig_lep__phi, "sig_lep__phi[n__sig_lep]/F");
		tree->Branch("sig_lep__pt", sig_lep__pt, "sig_lep__pt[n__sig_lep]/F");
		tree->Branch("sig_lep__type", sig_lep__type, "sig_lep__type[n__sig_lep]/I");
		tree->Branch("weight__pu", &weight__pu, "weight__pu/F");
		tree->Branch("weight__pu_down", &weight__pu_down, "weight__pu_down/F");
		tree->Branch("weight__pu_up", &weight__pu_up, "weight__pu_up/F");
		tree->Branch("weight__trigger", &weight__trigger, "weight__trigger/F");
		tree->Branch("weight__trigger_down", &weight__trigger_down, "weight__trigger_down/F");
		tree->Branch("weight__trigger_up", &weight__trigger_up, "weight__trigger_up/F");
        
		tree->Branch("gen_t__dpt_alt", &gen_t__dpt_alt, "gen_t__dpt_alt/F");
		tree->Branch("gen_tbar__dpt_alt", &gen_tbar__dpt_alt, "gen_tbar__dpt_alt/F");
		tree->Branch("gen_t2__b__eta", &gen_t2__b__eta, "gen_t2__b__eta/F");
		tree->Branch("gen_t2__b__mass", &gen_t2__b__mass, "gen_t2__b__mass/F");
		tree->Branch("gen_t2__b__phi", &gen_t2__b__phi, "gen_t2__b__phi/F");
		tree->Branch("gen_t2__b__pt", &gen_t2__b__pt, "gen_t2__b__pt/F");
		tree->Branch("gen_t2__b__status", &gen_t2__b__status, "gen_t2__b__status/I");
		tree->Branch("gen_t2__w_d1__eta", &gen_t2__w_d1__eta, "gen_t2__w_d1__eta/F");
		tree->Branch("gen_t2__w_d1__mass", &gen_t2__w_d1__mass, "gen_t2__w_d1__mass/F");
		tree->Branch("gen_t2__w_d1__phi", &gen_t2__w_d1__phi, "gen_t2__w_d1__phi/F");
		tree->Branch("gen_t2__w_d1__pt", &gen_t2__w_d1__pt, "gen_t2__w_d1__pt/F");
		tree->Branch("gen_t2__w_d1__status", &gen_t2__w_d1__status, "gen_t2__w_d1__status/I");
		tree->Branch("gen_t2__w_d2__eta", &gen_t2__w_d2__eta, "gen_t2__w_d2__eta/F");
		tree->Branch("gen_t2__w_d2__mass", &gen_t2__w_d2__mass, "gen_t2__w_d2__mass/F");
		tree->Branch("gen_t2__w_d2__phi", &gen_t2__w_d2__phi, "gen_t2__w_d2__phi/F");
		tree->Branch("gen_t2__w_d2__pt", &gen_t2__w_d2__pt, "gen_t2__w_d2__pt/F");
		tree->Branch("gen_t2__w_d2__status", &gen_t2__w_d2__status, "gen_t2__w_d2__status/I");
		tree->Branch("gen_tbar2__b__eta", &gen_tbar2__b__eta, "gen_tbar2__b__eta/F");
		tree->Branch("gen_tbar2__b__mass", &gen_tbar2__b__mass, "gen_tbar2__b__mass/F");
		tree->Branch("gen_tbar2__b__phi", &gen_tbar2__b__phi, "gen_tbar2__b__phi/F");
		tree->Branch("gen_tbar2__b__pt", &gen_tbar2__b__pt, "gen_tbar2__b__pt/F");
		tree->Branch("gen_tbar2__b__status", &gen_tbar2__b__status, "gen_tbar2__b__status/I");
		tree->Branch("gen_tbar2__w_d1__eta", &gen_tbar2__w_d1__eta, "gen_tbar2__w_d1__eta/F");
		tree->Branch("gen_tbar2__w_d1__mass", &gen_tbar2__w_d1__mass, "gen_tbar2__w_d1__mass/F");
		tree->Branch("gen_tbar2__w_d1__phi", &gen_tbar2__w_d1__phi, "gen_tbar2__w_d1__phi/F");
		tree->Branch("gen_tbar2__w_d1__pt", &gen_tbar2__w_d1__pt, "gen_tbar2__w_d1__pt/F");
		tree->Branch("gen_tbar2__w_d1__status", &gen_tbar2__w_d1__status, "gen_tbar2__w_d1__status/I");
		tree->Branch("gen_tbar2__w_d2__eta", &gen_tbar2__w_d2__eta, "gen_tbar2__w_d2__eta/F");
		tree->Branch("gen_tbar2__w_d2__mass", &gen_tbar2__w_d2__mass, "gen_tbar2__w_d2__mass/F");
		tree->Branch("gen_tbar2__w_d2__phi", &gen_tbar2__w_d2__phi, "gen_tbar2__w_d2__phi/F");
		tree->Branch("gen_tbar2__w_d2__pt", &gen_tbar2__w_d2__pt, "gen_tbar2__w_d2__pt/F");
		tree->Branch("gen_tbar2__w_d2__status", &gen_tbar2__w_d2__status, "gen_tbar2__w_d2__status/I");
		tree->Branch("n__jet_fat", &n__jet_fat, "n__jet_fat/I");
		tree->Branch("jet_fat__pt", jet_fat__pt, "jet_fat__pt[n__jet_fat]/F");
		tree->Branch("jet_fat__eta", jet_fat__eta, "jet_fat__eta[n__jet_fat]/F");
		tree->Branch("jet_fat__phi", jet_fat__phi, "jet_fat__phi[n__jet_fat]/F");
		tree->Branch("jet_fat__mass", jet_fat__mass, "jet_fat__mass[n__jet_fat]/F");
		tree->Branch("jet_fat__tau1", jet_fat__tau1, "jet_fat__tau1[n__jet_fat]/F");
		tree->Branch("jet_fat__tau2", jet_fat__tau2, "jet_fat__tau2[n__jet_fat]/F");
		tree->Branch("jet_fat__tau3", jet_fat__tau3, "jet_fat__tau3[n__jet_fat]/F");
		tree->Branch("n__jet_toptagger", &n__jet_toptagger, "n__jet_toptagger/I");
		tree->Branch("n__jet_toptagger_sj", &n__jet_toptagger_sj, "n__jet_toptagger_sj/I");
		tree->Branch("jet_toptagger__pt", jet_toptagger__pt, "jet_toptagger__pt[n__jet_toptagger]/F");
		tree->Branch("jet_toptagger__mass", jet_toptagger__mass, "jet_toptagger__mass[n__jet_toptagger]/F");
		tree->Branch("jet_toptagger__eta", jet_toptagger__eta, "jet_toptagger__eta[n__jet_toptagger]/F");
		tree->Branch("jet_toptagger__phi", jet_toptagger__phi, "jet_toptagger__phi[n__jet_toptagger]/F");
		tree->Branch("jet_toptagger__energy", jet_toptagger__energy, "jet_toptagger__energy[n__jet_toptagger]/F");
		tree->Branch("jet_toptagger__fj_pt", jet_toptagger__fj_pt, "jet_toptagger__fj_pt[n__jet_toptagger]/F");
		tree->Branch("jet_toptagger__fj_mass", jet_toptagger__fj_mass, "jet_toptagger__fj_mass[n__jet_toptagger]/F");
		tree->Branch("jet_toptagger__fj_eta", jet_toptagger__fj_eta, "jet_toptagger__fj_eta[n__jet_toptagger]/F");
		tree->Branch("jet_toptagger__fj_phi", jet_toptagger__fj_phi, "jet_toptagger__fj_phi[n__jet_toptagger]/F");
		tree->Branch("jet_toptagger__fW", jet_toptagger__fW, "jet_toptagger__fW[n__jet_toptagger]/F");
		tree->Branch("jet_toptagger__massRatioPassed", jet_toptagger__massRatioPassed, "jet_toptagger__massRatioPassed[n__jet_toptagger]/F");
		tree->Branch("jet_toptagger__Rmin", jet_toptagger__Rmin, "jet_toptagger__Rmin[n__jet_toptagger]/F");
		tree->Branch("jet_toptagger__ptFiltForRminExp", jet_toptagger__ptFiltForRminExp, "jet_toptagger__ptFiltForRminExp[n__jet_toptagger]/F");
		tree->Branch("jet_toptagger__RminExpected", jet_toptagger__RminExpected, "jet_toptagger__RminExpected[n__jet_toptagger]/F");
		tree->Branch("jet_toptagger__prunedMass", jet_toptagger__prunedMass, "jet_toptagger__prunedMass[n__jet_toptagger]/F");
		tree->Branch("jet_toptagger__topMass", jet_toptagger__topMass, "jet_toptagger__topMass[n__jet_toptagger]/F");
		tree->Branch("jet_toptagger__unfilteredMass", jet_toptagger__unfilteredMass, "jet_toptagger__unfilteredMass[n__jet_toptagger]/F");
		tree->Branch("jet_toptagger__child_idx", jet_toptagger__child_idx, "jet_toptagger__child_idx[n__jet_toptagger]/I");
		tree->Branch("jet_toptagger__isMultiR", jet_toptagger__isMultiR, "jet_toptagger__isMultiR[n__jet_toptagger]/I");
		tree->Branch("jet_toptagger__n_sj", jet_toptagger__n_sj, "jet_toptagger__n_sj[n__jet_toptagger]/I");
		tree->Branch("jet_toptagger_sj__energy", jet_toptagger_sj__energy, "jet_toptagger_sj__energy[n__jet_toptagger_sj]/F");
		tree->Branch("jet_toptagger_sj__eta", jet_toptagger_sj__eta, "jet_toptagger_sj__eta[n__jet_toptagger_sj]/F");
		tree->Branch("jet_toptagger_sj__mass", jet_toptagger_sj__mass, "jet_toptagger_sj__mass[n__jet_toptagger_sj]/F");
		tree->Branch("jet_toptagger_sj__phi", jet_toptagger_sj__phi, "jet_toptagger_sj__phi[n__jet_toptagger_sj]/F");
		tree->Branch("jet_toptagger_sj__pt", jet_toptagger_sj__pt, "jet_toptagger_sj__pt[n__jet_toptagger_sj]/F");
		tree->Branch("jet_toptagger_sj__parent_idx", jet_toptagger_sj__parent_idx, "jet_toptagger_sj__parent_idx[n__jet_toptagger_sj]/I");
		tree->Branch("n__jet_toptagger2", &n__jet_toptagger2, "n__jet_toptagger2/I");
		tree->Branch("n__jet_toptagger2_sj", &n__jet_toptagger2_sj, "n__jet_toptagger2_sj/I");
		tree->Branch("jet_toptagger2__pt", jet_toptagger2__pt, "jet_toptagger2__pt[n__jet_toptagger2]/F");
		tree->Branch("jet_toptagger2__mass", jet_toptagger2__mass, "jet_toptagger2__mass[n__jet_toptagger2]/F");
		tree->Branch("jet_toptagger2__eta", jet_toptagger2__eta, "jet_toptagger2__eta[n__jet_toptagger2]/F");
		tree->Branch("jet_toptagger2__phi", jet_toptagger2__phi, "jet_toptagger2__phi[n__jet_toptagger2]/F");
		tree->Branch("jet_toptagger2__energy", jet_toptagger2__energy, "jet_toptagger2__energy[n__jet_toptagger2]/F");
		tree->Branch("jet_toptagger2__fj_pt", jet_toptagger2__fj_pt, "jet_toptagger2__fj_pt[n__jet_toptagger2]/F");
		tree->Branch("jet_toptagger2__fj_mass", jet_toptagger2__fj_mass, "jet_toptagger2__fj_mass[n__jet_toptagger2]/F");
		tree->Branch("jet_toptagger2__fj_eta", jet_toptagger2__fj_eta, "jet_toptagger2__fj_eta[n__jet_toptagger2]/F");
		tree->Branch("jet_toptagger2__fj_phi", jet_toptagger2__fj_phi, "jet_toptagger2__fj_phi[n__jet_toptagger2]/F");
		tree->Branch("jet_toptagger2__fW", jet_toptagger2__fW, "jet_toptagger2__fW[n__jet_toptagger2]/F");
		tree->Branch("jet_toptagger2__massRatioPassed", jet_toptagger2__massRatioPassed, "jet_toptagger2__massRatioPassed[n__jet_toptagger2]/F");
		tree->Branch("jet_toptagger2__Rmin", jet_toptagger2__Rmin, "jet_toptagger2__Rmin[n__jet_toptagger2]/F");
		tree->Branch("jet_toptagger2__ptFiltForRminExp", jet_toptagger2__ptFiltForRminExp, "jet_toptagger2__ptFiltForRminExp[n__jet_toptagger2]/F");
		tree->Branch("jet_toptagger2__RminExpected", jet_toptagger2__RminExpected, "jet_toptagger2__RminExpected[n__jet_toptagger2]/F");
		tree->Branch("jet_toptagger2__prunedMass", jet_toptagger2__prunedMass, "jet_toptagger2__prunedMass[n__jet_toptagger2]/F");
		tree->Branch("jet_toptagger2__topMass", jet_toptagger2__topMass, "jet_toptagger2__topMass[n__jet_toptagger2]/F");
		tree->Branch("jet_toptagger2__unfilteredMass", jet_toptagger2__unfilteredMass, "jet_toptagger2__unfilteredMass[n__jet_toptagger2]/F");
		tree->Branch("jet_toptagger2__child_idx", jet_toptagger2__child_idx, "jet_toptagger2__child_idx[n__jet_toptagger2]/I");
		tree->Branch("jet_toptagger2__isMultiR", jet_toptagger2__isMultiR, "jet_toptagger2__isMultiR[n__jet_toptagger2]/I");
		tree->Branch("jet_toptagger2__n_sj", jet_toptagger2__n_sj, "jet_toptagger2__n_sj[n__jet_toptagger2]/I");
		tree->Branch("jet_toptagger2_sj__energy", jet_toptagger2_sj__energy, "jet_toptagger2_sj__energy[n__jet_toptagger2_sj]/F");
		tree->Branch("jet_toptagger2_sj__eta", jet_toptagger2_sj__eta, "jet_toptagger2_sj__eta[n__jet_toptagger2_sj]/F");
		tree->Branch("jet_toptagger2_sj__mass", jet_toptagger2_sj__mass, "jet_toptagger2_sj__mass[n__jet_toptagger2_sj]/F");
		tree->Branch("jet_toptagger2_sj__phi", jet_toptagger2_sj__phi, "jet_toptagger2_sj__phi[n__jet_toptagger2_sj]/F");
		tree->Branch("jet_toptagger2_sj__pt", jet_toptagger2_sj__pt, "jet_toptagger2_sj__pt[n__jet_toptagger2_sj]/F");
		tree->Branch("jet_toptagger2_sj__parent_idx", jet_toptagger2_sj__parent_idx, "jet_toptagger2_sj__parent_idx[n__jet_toptagger2_sj]/I");
        //HEADERGEN_BRANCH_CREATOR
	}

    //connects the branches of an existing TTree to variables
    //used when loading the file
	void set_branch_addresses(void) {
		tree->SetBranchAddress("debug__time1c", &debug__time1c);
		tree->SetBranchAddress("debug__time1r", &debug__time1r);
		tree->SetBranchAddress("event__id", &event__id);
		tree->SetBranchAddress("event__json", &event__json);
		tree->SetBranchAddress("event__lumi", &event__lumi);
		tree->SetBranchAddress("event__run", &event__run);
		tree->SetBranchAddress("gen_b__eta", &gen_b__eta);
		tree->SetBranchAddress("gen_b__id", &gen_b__id);
		tree->SetBranchAddress("gen_b__mass", &gen_b__mass);
		tree->SetBranchAddress("gen_b__phi", &gen_b__phi);
		tree->SetBranchAddress("gen_b__pt", &gen_b__pt);
		tree->SetBranchAddress("gen_b__status", &gen_b__status);
		tree->SetBranchAddress("gen_bbar__eta", &gen_bbar__eta);
		tree->SetBranchAddress("gen_bbar__id", &gen_bbar__id);
		tree->SetBranchAddress("gen_bbar__mass", &gen_bbar__mass);
		tree->SetBranchAddress("gen_bbar__phi", &gen_bbar__phi);
		tree->SetBranchAddress("gen_bbar__pt", &gen_bbar__pt);
		tree->SetBranchAddress("gen_bbar__status", &gen_bbar__status);
		tree->SetBranchAddress("gen_jet__eta", gen_jet__eta);
		tree->SetBranchAddress("gen_jet__id", gen_jet__id);
		tree->SetBranchAddress("gen_jet__mass", gen_jet__mass);
		tree->SetBranchAddress("gen_jet__phi", gen_jet__phi);
		tree->SetBranchAddress("gen_jet__pt", gen_jet__pt);
		tree->SetBranchAddress("gen_jet__status", gen_jet__status);
		tree->SetBranchAddress("gen_jet__type", gen_jet__type);
		tree->SetBranchAddress("gen_jet_parton__eta", gen_jet_parton__eta);
		tree->SetBranchAddress("gen_jet_parton__id", gen_jet_parton__id);
		tree->SetBranchAddress("gen_jet_parton__mass", gen_jet_parton__mass);
		tree->SetBranchAddress("gen_jet_parton__phi", gen_jet_parton__phi);
		tree->SetBranchAddress("gen_jet_parton__pt", gen_jet_parton__pt);
		tree->SetBranchAddress("gen_jet_parton__status", gen_jet_parton__status);
		tree->SetBranchAddress("gen_jet_parton__type", gen_jet_parton__type);
		tree->SetBranchAddress("gen_lep__eta", gen_lep__eta);
		tree->SetBranchAddress("gen_lep__id", gen_lep__id);
		tree->SetBranchAddress("gen_lep__mass", gen_lep__mass);
		tree->SetBranchAddress("gen_lep__phi", gen_lep__phi);
		tree->SetBranchAddress("gen_lep__pt", gen_lep__pt);
		tree->SetBranchAddress("gen_lep__status", gen_lep__status);
		tree->SetBranchAddress("gen_lep__type", gen_lep__type);
		tree->SetBranchAddress("gen_met__phi", &gen_met__phi);
		tree->SetBranchAddress("gen_met__pt", &gen_met__pt);
		tree->SetBranchAddress("gen_met__sumet", &gen_met__sumet);
		
		tree->SetBranchAddress("gen_t__eta", &gen_t__eta);
		tree->SetBranchAddress("gen_t__mass", &gen_t__mass);
		tree->SetBranchAddress("gen_t__phi", &gen_t__phi);
		tree->SetBranchAddress("gen_t__pt", &gen_t__pt);
		
		tree->SetBranchAddress("gen_t__b__eta", &gen_t__b__eta);
		tree->SetBranchAddress("gen_t__b__mass", &gen_t__b__mass);
		tree->SetBranchAddress("gen_t__b__phi", &gen_t__b__phi);
		tree->SetBranchAddress("gen_t__b__pt", &gen_t__b__pt);
		tree->SetBranchAddress("gen_t__b__status", &gen_t__b__status);
		tree->SetBranchAddress("gen_t__w_d1__eta", &gen_t__w_d1__eta);
		tree->SetBranchAddress("gen_t__w_d1__id", &gen_t__w_d1__id);
		tree->SetBranchAddress("gen_t__w_d1__mass", &gen_t__w_d1__mass);
		tree->SetBranchAddress("gen_t__w_d1__phi", &gen_t__w_d1__phi);
		tree->SetBranchAddress("gen_t__w_d1__pt", &gen_t__w_d1__pt);
		tree->SetBranchAddress("gen_t__w_d1__status", &gen_t__w_d1__status);
		tree->SetBranchAddress("gen_t__w_d2__eta", &gen_t__w_d2__eta);
		tree->SetBranchAddress("gen_t__w_d2__id", &gen_t__w_d2__id);
		tree->SetBranchAddress("gen_t__w_d2__mass", &gen_t__w_d2__mass);
		tree->SetBranchAddress("gen_t__w_d2__phi", &gen_t__w_d2__phi);
		tree->SetBranchAddress("gen_t__w_d2__pt", &gen_t__w_d2__pt);
		tree->SetBranchAddress("gen_t__w_d2__status", &gen_t__w_d2__status);
		
		tree->SetBranchAddress("gen_tbar__eta", &gen_tbar__eta);
		tree->SetBranchAddress("gen_tbar__mass", &gen_tbar__mass);
		tree->SetBranchAddress("gen_tbar__phi", &gen_tbar__phi);
		tree->SetBranchAddress("gen_tbar__pt", &gen_tbar__pt);
		
		tree->SetBranchAddress("gen_tbar__b__eta", &gen_tbar__b__eta);
		tree->SetBranchAddress("gen_tbar__b__mass", &gen_tbar__b__mass);
		tree->SetBranchAddress("gen_tbar__b__phi", &gen_tbar__b__phi);
		tree->SetBranchAddress("gen_tbar__b__pt", &gen_tbar__b__pt);
		tree->SetBranchAddress("gen_tbar__b__status", &gen_tbar__b__status);
		tree->SetBranchAddress("gen_tbar__w_d1__eta", &gen_tbar__w_d1__eta);
		tree->SetBranchAddress("gen_tbar__w_d1__id", &gen_tbar__w_d1__id);
		tree->SetBranchAddress("gen_tbar__w_d1__mass", &gen_tbar__w_d1__mass);
		tree->SetBranchAddress("gen_tbar__w_d1__phi", &gen_tbar__w_d1__phi);
		tree->SetBranchAddress("gen_tbar__w_d1__pt", &gen_tbar__w_d1__pt);
		tree->SetBranchAddress("gen_tbar__w_d1__status", &gen_tbar__w_d1__status);
		tree->SetBranchAddress("gen_tbar__w_d2__eta", &gen_tbar__w_d2__eta);
		tree->SetBranchAddress("gen_tbar__w_d2__id", &gen_tbar__w_d2__id);
		tree->SetBranchAddress("gen_tbar__w_d2__mass", &gen_tbar__w_d2__mass);
		tree->SetBranchAddress("gen_tbar__w_d2__phi", &gen_tbar__w_d2__phi);
		tree->SetBranchAddress("gen_tbar__w_d2__pt", &gen_tbar__w_d2__pt);
		tree->SetBranchAddress("gen_tbar__w_d2__status", &gen_tbar__w_d2__status);
		tree->SetBranchAddress("hypo1", &hypo1);
		
		tree->SetBranchAddress("jet__bd_csv", jet__bd_csv);
		tree->SetBranchAddress("jet__ce_e", jet__ce_e);
		tree->SetBranchAddress("jet__ch_e", jet__ch_e);
		tree->SetBranchAddress("jet__el_e", jet__el_e);
		tree->SetBranchAddress("jet__energy", jet__energy);
		tree->SetBranchAddress("jet__eta", jet__eta);
		tree->SetBranchAddress("jet__id", jet__id);
		tree->SetBranchAddress("jet__jetId", jet__jetId);
		tree->SetBranchAddress("jet__mass", jet__mass);
		tree->SetBranchAddress("jet__mu_e", jet__mu_e);
		tree->SetBranchAddress("jet__ne_e", jet__ne_e);
		tree->SetBranchAddress("jet__nh_e", jet__nh_e);
		tree->SetBranchAddress("jet__ph_e", jet__ph_e);
		tree->SetBranchAddress("jet__phi", jet__phi);
		tree->SetBranchAddress("jet__pileupJetId", jet__pileupJetId);
		tree->SetBranchAddress("jet__pass_pileupJetId", jet__pass_pileupJetId);
		tree->SetBranchAddress("jet__pt", jet__pt);
		tree->SetBranchAddress("jet__pt_alt", jet__pt_alt);
		tree->SetBranchAddress("jet__type", jet__type);
		tree->SetBranchAddress("jet__vtx3DSig", jet__vtx3DSig);
		tree->SetBranchAddress("jet__vtx3DVal", jet__vtx3DVal);
		tree->SetBranchAddress("jet__vtxMass", jet__vtxMass);
		tree->SetBranchAddress("jet__vtxNtracks", jet__vtxNtracks);
		
		tree->SetBranchAddress("lep__ch_iso", lep__ch_iso);
		tree->SetBranchAddress("lep__charge", lep__charge);
		tree->SetBranchAddress("lep__dxy", lep__dxy);
		tree->SetBranchAddress("lep__dz", lep__dz);
		tree->SetBranchAddress("lep__ec_iso", lep__ec_iso);
		tree->SetBranchAddress("lep__eta", lep__eta);
		tree->SetBranchAddress("lep__hc_iso", lep__hc_iso);
		tree->SetBranchAddress("lep__id", lep__id);
		tree->SetBranchAddress("lep__id_bitmask", lep__id_bitmask);
		tree->SetBranchAddress("lep__is_loose", lep__is_loose);
		tree->SetBranchAddress("lep__is_medium", lep__is_medium);
		tree->SetBranchAddress("lep__is_tight", lep__is_tight);
		tree->SetBranchAddress("lep__mass", lep__mass);
		tree->SetBranchAddress("lep__mva", lep__mva);
		tree->SetBranchAddress("lep__p_iso", lep__p_iso);
		tree->SetBranchAddress("lep__ph_iso", lep__ph_iso);
		tree->SetBranchAddress("lep__phi", lep__phi);
		tree->SetBranchAddress("lep__pt", lep__pt);
		tree->SetBranchAddress("lep__puch_iso", lep__puch_iso);
		tree->SetBranchAddress("lep__rel_iso", lep__rel_iso);
		tree->SetBranchAddress("lep__type", lep__type);

		tree->SetBranchAddress("lhe__ht", &lhe__ht);
		tree->SetBranchAddress("lhe__n_b", &lhe__n_b);
		tree->SetBranchAddress("lhe__n_c", &lhe__n_c);
		tree->SetBranchAddress("lhe__n_e", &lhe__n_e);
		tree->SetBranchAddress("lhe__n_g", &lhe__n_g);
		tree->SetBranchAddress("lhe__n_j", &lhe__n_j);
		tree->SetBranchAddress("lhe__n_l", &lhe__n_l);
		tree->SetBranchAddress("n_sim_b", &n_sim_b);
		tree->SetBranchAddress("n_sim_c", &n_sim_c);
		
		tree->SetBranchAddress("met__phi", &met__phi);
		tree->SetBranchAddress("met__pt", &met__pt);
		tree->SetBranchAddress("met__sumet", &met__sumet);
		tree->SetBranchAddress("met__pt__en_down", &met__pt__en_down);
		tree->SetBranchAddress("met__pt__en_up", &met__pt__en_up);
		tree->SetBranchAddress("n__jet", &n__jet);
		tree->SetBranchAddress("n__lep", &n__lep);
		tree->SetBranchAddress("n__pv", &n__pv);
		tree->SetBranchAddress("n__pvi", &n__pvi);
		tree->SetBranchAddress("n__sig_lep", &n__sig_lep);
		tree->SetBranchAddress("pvi__bx", pvi__bx);
		tree->SetBranchAddress("pvi__n0", pvi__n0);
		tree->SetBranchAddress("pvi__ntrue", pvi__ntrue);
		tree->SetBranchAddress("sig_lep__charge", sig_lep__charge);
		tree->SetBranchAddress("sig_lep__eta", sig_lep__eta);
		tree->SetBranchAddress("sig_lep__id", sig_lep__id);
		tree->SetBranchAddress("sig_lep__idx", sig_lep__idx);
		tree->SetBranchAddress("sig_lep__mass", sig_lep__mass);
		tree->SetBranchAddress("sig_lep__phi", sig_lep__phi);
		tree->SetBranchAddress("sig_lep__pt", sig_lep__pt);
		tree->SetBranchAddress("sig_lep__type", sig_lep__type);
		tree->SetBranchAddress("weight__pu", &weight__pu);
		tree->SetBranchAddress("weight__pu_down", &weight__pu_down);
		tree->SetBranchAddress("weight__pu_up", &weight__pu_up);
		tree->SetBranchAddress("weight__trigger", &weight__trigger);
		tree->SetBranchAddress("weight__trigger_down", &weight__trigger_down);
		tree->SetBranchAddress("weight__trigger_up", &weight__trigger_up);
        
		tree->SetBranchAddress("gen_t__dpt_alt", &gen_t__dpt_alt);
		tree->SetBranchAddress("gen_tbar__dpt_alt", &gen_tbar__dpt_alt);
		tree->SetBranchAddress("gen_t2__b__eta", &gen_t2__b__eta);
		tree->SetBranchAddress("gen_t2__b__mass", &gen_t2__b__mass);
		tree->SetBranchAddress("gen_t2__b__phi", &gen_t2__b__phi);
		tree->SetBranchAddress("gen_t2__b__pt", &gen_t2__b__pt);
		tree->SetBranchAddress("gen_t2__b__status", &gen_t2__b__status);
		tree->SetBranchAddress("gen_t2__w_d1__eta", &gen_t2__w_d1__eta);
		tree->SetBranchAddress("gen_t2__w_d1__mass", &gen_t2__w_d1__mass);
		tree->SetBranchAddress("gen_t2__w_d1__phi", &gen_t2__w_d1__phi);
		tree->SetBranchAddress("gen_t2__w_d1__pt", &gen_t2__w_d1__pt);
		tree->SetBranchAddress("gen_t2__w_d1__status", &gen_t2__w_d1__status);
		tree->SetBranchAddress("gen_t2__w_d2__eta", &gen_t2__w_d2__eta);
		tree->SetBranchAddress("gen_t2__w_d2__mass", &gen_t2__w_d2__mass);
		tree->SetBranchAddress("gen_t2__w_d2__phi", &gen_t2__w_d2__phi);
		tree->SetBranchAddress("gen_t2__w_d2__pt", &gen_t2__w_d2__pt);
		tree->SetBranchAddress("gen_t2__w_d2__status", &gen_t2__w_d2__status);
		tree->SetBranchAddress("gen_tbar2__b__eta", &gen_tbar2__b__eta);
		tree->SetBranchAddress("gen_tbar2__b__mass", &gen_tbar2__b__mass);
		tree->SetBranchAddress("gen_tbar2__b__phi", &gen_tbar2__b__phi);
		tree->SetBranchAddress("gen_tbar2__b__pt", &gen_tbar2__b__pt);
		tree->SetBranchAddress("gen_tbar2__b__status", &gen_tbar2__b__status);
		tree->SetBranchAddress("gen_tbar2__w_d1__eta", &gen_tbar2__w_d1__eta);
		tree->SetBranchAddress("gen_tbar2__w_d1__mass", &gen_tbar2__w_d1__mass);
		tree->SetBranchAddress("gen_tbar2__w_d1__phi", &gen_tbar2__w_d1__phi);
		tree->SetBranchAddress("gen_tbar2__w_d1__pt", &gen_tbar2__w_d1__pt);
		tree->SetBranchAddress("gen_tbar2__w_d1__status", &gen_tbar2__w_d1__status);
		tree->SetBranchAddress("gen_tbar2__w_d2__eta", &gen_tbar2__w_d2__eta);
		tree->SetBranchAddress("gen_tbar2__w_d2__mass", &gen_tbar2__w_d2__mass);
		tree->SetBranchAddress("gen_tbar2__w_d2__phi", &gen_tbar2__w_d2__phi);
		tree->SetBranchAddress("gen_tbar2__w_d2__pt", &gen_tbar2__w_d2__pt);
		tree->SetBranchAddress("gen_tbar2__w_d2__status", &gen_tbar2__w_d2__status);
		tree->SetBranchAddress("n__jet_fat", &n__jet_fat);
		tree->SetBranchAddress("jet_fat__pt", jet_fat__pt);
		tree->SetBranchAddress("jet_fat__eta", jet_fat__eta);
		tree->SetBranchAddress("jet_fat__phi", jet_fat__phi);
		tree->SetBranchAddress("jet_fat__mass", jet_fat__mass);
		tree->SetBranchAddress("jet_fat__tau1", jet_fat__tau1);
		tree->SetBranchAddress("jet_fat__tau2", jet_fat__tau2);
		tree->SetBranchAddress("jet_fat__tau3", jet_fat__tau3);
		tree->SetBranchAddress("n__jet_toptagger", &n__jet_toptagger);
		tree->SetBranchAddress("n__jet_toptagger_sj", &n__jet_toptagger_sj);
		tree->SetBranchAddress("jet_toptagger__pt", jet_toptagger__pt);
		tree->SetBranchAddress("jet_toptagger__mass", jet_toptagger__mass);
		tree->SetBranchAddress("jet_toptagger__eta", jet_toptagger__eta);
		tree->SetBranchAddress("jet_toptagger__phi", jet_toptagger__phi);
		tree->SetBranchAddress("jet_toptagger__energy", jet_toptagger__energy);
		tree->SetBranchAddress("jet_toptagger__fj_pt", jet_toptagger__fj_pt);
		tree->SetBranchAddress("jet_toptagger__fj_mass", jet_toptagger__fj_mass);
		tree->SetBranchAddress("jet_toptagger__fj_eta", jet_toptagger__fj_eta);
		tree->SetBranchAddress("jet_toptagger__fj_phi", jet_toptagger__fj_phi);
		tree->SetBranchAddress("jet_toptagger__fW", jet_toptagger__fW);
		tree->SetBranchAddress("jet_toptagger__massRatioPassed", jet_toptagger__massRatioPassed);
		tree->SetBranchAddress("jet_toptagger__Rmin", jet_toptagger__Rmin);
		tree->SetBranchAddress("jet_toptagger__ptFiltForRminExp", jet_toptagger__ptFiltForRminExp);
		tree->SetBranchAddress("jet_toptagger__RminExpected", jet_toptagger__RminExpected);
		tree->SetBranchAddress("jet_toptagger__prunedMass", jet_toptagger__prunedMass);
		tree->SetBranchAddress("jet_toptagger__topMass", jet_toptagger__topMass);
		tree->SetBranchAddress("jet_toptagger__unfilteredMass", jet_toptagger__unfilteredMass);
		tree->SetBranchAddress("jet_toptagger__child_idx", jet_toptagger__child_idx);
		tree->SetBranchAddress("jet_toptagger__isMultiR", jet_toptagger__isMultiR);
		tree->SetBranchAddress("jet_toptagger__n_sj", jet_toptagger__n_sj);
		tree->SetBranchAddress("jet_toptagger_sj__energy", jet_toptagger_sj__energy);
		tree->SetBranchAddress("jet_toptagger_sj__eta", jet_toptagger_sj__eta);
		tree->SetBranchAddress("jet_toptagger_sj__mass", jet_toptagger_sj__mass);
		tree->SetBranchAddress("jet_toptagger_sj__phi", jet_toptagger_sj__phi);
		tree->SetBranchAddress("jet_toptagger_sj__pt", jet_toptagger_sj__pt);
		tree->SetBranchAddress("jet_toptagger_sj__parent_idx", jet_toptagger_sj__parent_idx);
		tree->SetBranchAddress("n__jet_toptagger2", &n__jet_toptagger2);
		tree->SetBranchAddress("n__jet_toptagger2_sj", &n__jet_toptagger2_sj);
		tree->SetBranchAddress("jet_toptagger2__pt", jet_toptagger2__pt);
		tree->SetBranchAddress("jet_toptagger2__mass", jet_toptagger2__mass);
		tree->SetBranchAddress("jet_toptagger2__eta", jet_toptagger2__eta);
		tree->SetBranchAddress("jet_toptagger2__phi", jet_toptagger2__phi);
		tree->SetBranchAddress("jet_toptagger2__energy", jet_toptagger2__energy);
		tree->SetBranchAddress("jet_toptagger2__fj_pt", jet_toptagger2__fj_pt);
		tree->SetBranchAddress("jet_toptagger2__fj_mass", jet_toptagger2__fj_mass);
		tree->SetBranchAddress("jet_toptagger2__fj_eta", jet_toptagger2__fj_eta);
		tree->SetBranchAddress("jet_toptagger2__fj_phi", jet_toptagger2__fj_phi);
		tree->SetBranchAddress("jet_toptagger2__fW", jet_toptagger2__fW);
		tree->SetBranchAddress("jet_toptagger2__massRatioPassed", jet_toptagger2__massRatioPassed);
		tree->SetBranchAddress("jet_toptagger2__Rmin", jet_toptagger2__Rmin);
		tree->SetBranchAddress("jet_toptagger2__ptFiltForRminExp", jet_toptagger2__ptFiltForRminExp);
		tree->SetBranchAddress("jet_toptagger2__RminExpected", jet_toptagger2__RminExpected);
		tree->SetBranchAddress("jet_toptagger2__prunedMass", jet_toptagger2__prunedMass);
		tree->SetBranchAddress("jet_toptagger2__topMass", jet_toptagger2__topMass);
		tree->SetBranchAddress("jet_toptagger2__unfilteredMass", jet_toptagger2__unfilteredMass);
		tree->SetBranchAddress("jet_toptagger2__child_idx", jet_toptagger2__child_idx);
		tree->SetBranchAddress("jet_toptagger2__isMultiR", jet_toptagger2__isMultiR);
		tree->SetBranchAddress("jet_toptagger2__n_sj", jet_toptagger2__n_sj);
		tree->SetBranchAddress("jet_toptagger2_sj__energy", jet_toptagger2_sj__energy);
		tree->SetBranchAddress("jet_toptagger2_sj__eta", jet_toptagger2_sj__eta);
		tree->SetBranchAddress("jet_toptagger2_sj__mass", jet_toptagger2_sj__mass);
		tree->SetBranchAddress("jet_toptagger2_sj__phi", jet_toptagger2_sj__phi);
		tree->SetBranchAddress("jet_toptagger2_sj__pt", jet_toptagger2_sj__pt);
		tree->SetBranchAddress("jet_toptagger2_sj__parent_idx", jet_toptagger2_sj__parent_idx);
        //HEADERGEN_BRANCH_SETADDRESS

	}
};

#endif
